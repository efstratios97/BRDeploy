{"remainingRequest":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\src\\components\\DashboardComponents\\ArchitectureViews.vue?vue&type=style&index=0&id=1a30a3b6&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\src\\components\\DashboardComponents\\ArchitectureViews.vue","mtime":1637033200133},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouY29tcG9uZW50LWNhcmQgew0KICBtYXJnaW4tdG9wOiAzMHB4Ow0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQogIGRpc3BsYXk6IGZsZXg7DQogIGZsZXgtZ3JvdzogMTsNCiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsNCiAgbWluLXdpZHRoOiAwOw0KICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7DQogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7DQogIGJhY2tncm91bmQtY2xpcDogYm9yZGVyLWJveDsNCiAgYm9yZGVyLXJhZGl1czogMC4yNXJlbTsNCiAgcmVzaXplOiBib3RoOw0KICBvdmVyZmxvdzogYXV0bzsNCiAgbWFyZ2luLXJpZ2h0OiAxMHB4Ow0KICBtYXJnaW4tbGVmdDogMTBweDsNCn0NCg0KLmNlbnRlcmVkLWNoYXJ0IHsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCn0NCg0KLnAtbXVsdGlzZWxlY3Qgew0KICBtYXgtd2lkdGg6IDgwMHB4Ow0KfQ0KDQoucC1tdWx0aXNlbGVjdC1sYWJlbDpub3QoLnAtcGxhY2Vob2xkZXIpIHsNCiAgcGFkZGluZy10b3A6IDAuMjVyZW07DQogIHBhZGRpbmctYm90dG9tOiAwLjI1cmVtOw0KfQ0KLnNlbGVjdGVkLWl0ZW0tdmFsdWUgew0KICBwYWRkaW5nOiAwLjI1cmVtIDAuNXJlbTsNCiAgYm9yZGVyLXJhZGl1czogM3B4Ow0KICAvKiBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7ICovDQogIG1hcmdpbi1ib3R0b206IDAuNXJlbTsNCiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeS1jb2xvcik7DQogIGNvbG9yOiB2YXIoLS1wcmltYXJ5LWNvbG9yLXRleHQpOw0KfQ0KDQpAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5MDBweCkgew0KICAucC1tdWx0aXNlbGVjdCB7DQogICAgd2lkdGg6IDEwMCU7DQogIH0NCn0NCg=="},{"version":3,"sources":["C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\src\\components\\DashboardComponents\\ArchitectureViews.vue"],"names":[],"mappings":"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","file":"C:/Users/Strat/Desktop/ProjectAthena/AthenaSRC/FrontEnd/src/components/DashboardComponents/ArchitectureViews.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"container-...\">\r\n      <div class=\"row row-cols-auto auto-cols-adj\">\r\n        <Card class=\"component-card\">\r\n          <template v-slot:title> Architecture Views </template>\r\n          <template v-slot:subtitle>\r\n            Table with all available Architecture Views\r\n          </template>\r\n          <template v-slot:content>\r\n            <div class=\"p-fluid\" @deleted=\"getArchitectureViews()\">\r\n              <table-architecture-views\r\n                :key=\"componentKey\"\r\n                @close=\"emitClose\"\r\n              ></table-architecture-views>\r\n            </div>\r\n          </template>\r\n          <template v-slot:footer> </template>\r\n        </Card>\r\n        <Card class=\"component-card\">\r\n          <template v-slot:title> Create Architecture View </template>\r\n          <template v-slot:subtitle>\r\n            Create individual Architecture Views based on your needs\r\n          </template>\r\n          <template v-slot:content>\r\n            <form>\r\n              <div class=\"p-fluid\">\r\n                <div class=\"p-inputgroup\">\r\n                  <span class=\"p-inputgroup-addon\">\r\n                    <b-icon-upc />\r\n                  </span>\r\n                  <InputText\r\n                    placeholder=\"Name\"\r\n                    v-model=\"create_architecture_view_name\"\r\n                  />\r\n                </div>\r\n                <br />\r\n                <div class=\"p-inputgroup\">\r\n                  <span class=\"p-inputgroup-addon\">\r\n                    <b-icon-journal-text />\r\n                  </span>\r\n                  <InputText\r\n                    placeholder=\"Description\"\r\n                    v-model=\"create_architecture_view_description\"\r\n                  />\r\n                </div>\r\n                <br />\r\n                <MultiSelect\r\n                  v-model=\"selected_architecture_view_components\"\r\n                  :options=\"architecture_view_components\"\r\n                  optionLabel=\"architecture_view_component\"\r\n                  placeholder=\"Select a Architecture View Component\"\r\n                  :filter=\"true\"\r\n                  filterPlaceholder=\"Find a Architecture View Component\"\r\n                  class=\"multiselect-custom\"\r\n                />\r\n                <br />\r\n\r\n                <div class=\"p-grid p-nogutter p-justify-between\">\r\n                  <Button\r\n                    label=\"Create Architecture View\"\r\n                    @click=\"createArchitectureView()\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </template>\r\n          <template v-slot:footer> </template>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport TableArchitectureViews from \"../TableArchitectureViews.vue\";\r\n\r\nexport default {\r\n  props: [\"selected_dataset_id\", \"selected_dataset_label\"],\r\n  components: { \"table-architecture-views\": TableArchitectureViews },\r\n  data() {\r\n    return {\r\n      componentKey: 0,\r\n      selected_architecture_view_components: \"\",\r\n      selected_architecture_view: \"\",\r\n      create_architecture_view_description: \"\",\r\n      create_architecture_view_name: \"\",\r\n      architecture_views_all: \"\",\r\n      deps_from_dataset: this.getDepartmentsFromDataset(),\r\n      architecture_views: this.getArchitectureViews(),\r\n      architecture_view_components: this.getComponents(),\r\n    };\r\n  },\r\n  methods: {\r\n    createArchitectureView() {\r\n      this.submitted = true;\r\n      this.formData = new FormData();\r\n      this.formData.append(\"name\", this.create_architecture_view_name);\r\n      this.formData.append(\r\n        \"description\",\r\n        this.create_architecture_view_description\r\n      );\r\n      var components_string = \"\";\r\n      for (\r\n        let index = 0;\r\n        index < this.selected_architecture_view_components.length;\r\n        index++\r\n      ) {\r\n        components_string +=\r\n          this.selected_architecture_view_components[index]\r\n            .architecture_view_component;\r\n        if (index < this.selected_architecture_view_components.length - 1) {\r\n          components_string += \",\";\r\n        }\r\n      }\r\n      this.formData.append(\"components\", components_string);\r\n      this.$axios\r\n        .post(\"/create_architecture_view\", this.formData)\r\n        .then(() => {\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Architecture View Creation Successful\",\r\n            detail: \"The selected Architecture View was created\",\r\n            life: 3000,\r\n          });\r\n          this.getArchitectureViews();\r\n          this.componentKey += 1;\r\n          this.emitClose();\r\n        })\r\n        .catch(() => {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Architecture View Creation Unsuccessful\",\r\n            detail: \"Check if Architecture View Name already exists\",\r\n            life: 3000,\r\n          });\r\n        });\r\n    },\r\n    getArchitectureViews() {\r\n      this.$axios.get(\"/get_architecture_views\").then((res) => {\r\n        this.architecture_views_all = res.data.data;\r\n        var data_tmp = [];\r\n        for (let index = 0; index < res.data.data.length; index++) {\r\n          data_tmp.push({\r\n            architecture_view: res.data.data[index].name,\r\n          });\r\n        }\r\n        this.architecture_views = data_tmp;\r\n      });\r\n    },\r\n    getDepartmentsFromDataset() {\r\n      this.$axios\r\n        .get(\"/get_departments_from_dataset/\" + this.selected_dataset_id)\r\n        .then((res) => {\r\n          var data_tmp = [{ dep: \"All\" }];\r\n          for (let index = 0; index < res.data.data.length; index++) {\r\n            if (res.data.data[index] !== null) {\r\n              data_tmp.push({ dep: res.data.data[index] });\r\n            }\r\n          }\r\n          this.deps_from_dataset = data_tmp;\r\n        });\r\n    },\r\n    getComponents() {\r\n      this.$axios\r\n        .get(\"/get_components/\" + this.selected_dataset_id)\r\n        .then((res) => {\r\n          var data_tmp = [];\r\n          for (let index = 0; index < res.data.data.length; index++) {\r\n            data_tmp.push({\r\n              architecture_view_component: res.data.data[index],\r\n            });\r\n          }\r\n          this.architecture_view_components = data_tmp;\r\n        });\r\n    },\r\n    updateDataLabelsArchitecureViewBar(data) {\r\n      this.chartOptionsArchitectureView = {\r\n        ...this.chartOptionsArchitectureView,\r\n        ...{\r\n          xaxis: {\r\n            categories: data,\r\n          },\r\n        },\r\n      };\r\n    },\r\n    emitClose() {\r\n      this.$emit(\"close\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.component-card {\r\n  margin-top: 30px;\r\n  position: relative;\r\n  display: flex;\r\n  flex-grow: 1;\r\n  flex-direction: column;\r\n  min-width: 0;\r\n  word-wrap: break-word;\r\n  background-color: #fff;\r\n  background-clip: border-box;\r\n  border-radius: 0.25rem;\r\n  resize: both;\r\n  overflow: auto;\r\n  margin-right: 10px;\r\n  margin-left: 10px;\r\n}\r\n\r\n.centered-chart {\r\n  align-items: center;\r\n}\r\n\r\n.p-multiselect {\r\n  max-width: 800px;\r\n}\r\n\r\n.p-multiselect-label:not(.p-placeholder) {\r\n  padding-top: 0.25rem;\r\n  padding-bottom: 0.25rem;\r\n}\r\n.selected-item-value {\r\n  padding: 0.25rem 0.5rem;\r\n  border-radius: 3px;\r\n  /* display: inline-block; */\r\n  margin-bottom: 0.5rem;\r\n  background-color: var(--primary-color);\r\n  color: var(--primary-color-text);\r\n}\r\n\r\n@media screen and (max-width: 900px) {\r\n  .p-multiselect {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>"]}]}