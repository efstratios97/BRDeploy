{"remainingRequest":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\src\\components\\SelectorDataset.vue?vue&type=style&index=0&id=d76380ee&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\src\\components\\SelectorDataset.vue","mtime":1648250993969},{"path":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\css-loader\\dist\\cjs.js","mtime":1644423218600},{"path":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1644423220162},{"path":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\postcss-loader\\src\\index.js","mtime":1644423219175},{"path":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644423218092},{"path":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1644423219480}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpsYWJlbCB7DQogIGRpc3BsYXk6IGJsb2NrOw0KfQ0KDQouYnRuLWZvcm0gew0KICBjb2xvcjogd2hpdGU7DQogIGJhY2tncm91bmQ6ICMwZDZlZmQ7DQogIGJvcmRlcjogMHB4IHNvbGlkIGJsdWU7DQogIGJvcmRlci1yYWRpdXM6IDJweDsNCn0NCg0Kc2VsZWN0IHsNCiAgY29sb3I6IGJsYWNrOw0KfQ0KDQppbnB1dCB7DQogIGNvbG9yOiBibGFjazsNCn0NCg0KdGV4dGFyZWEgew0KICBjb2xvcjogYmxhY2s7DQp9DQo="},{"version":3,"sources":["C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\src\\components\\SelectorDataset.vue"],"names":[],"mappings":";AA0HA,CAAC,CAAC,CAAC,CAAC,EAAE;EACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACR,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACpB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACL,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACd;;AAEA,CAAC,CAAC,CAAC,CAAC,EAAE;EACJ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACd;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACP,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACd","file":"C:/Users/efstr/OneDrive/Desktop/ProjectAthena/AthenaSRC/FrontEnd/src/components/SelectorDataset.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <Card>\r\n    <template v-slot:title> Dataset Selection </template>\r\n    <template v-slot:subtitle>\r\n      Select the Dataset you want to analyze\r\n    </template>\r\n    <template v-slot:content>\r\n      <CascadeSelect\r\n        v-model=\"selected_dataset\"\r\n        :options=\"datasets\"\r\n        optionLabel=\"dataset_desc\"\r\n        optionGroupLabel=\"label\"\r\n        :optionGroupChildren=\"['dataset']\"\r\n        style=\"minwidth: 14rem\"\r\n        placeholder=\"Select a Dataset\"\r\n      />\r\n    </template>\r\n    <template v-slot:footer>\r\n      <customazible-button\r\n        @button-click=\"nextPage()\"\r\n        altLabel=\"Next\"\r\n        altClass=\"p-flex p-justify-content-center\"\r\n        altButtonStyle=\"min-width: 100%\"\r\n        altIcon=\"pi pi-arrow-circle-right\"\r\n        altIconPos=\"right\"\r\n      ></customazible-button>\r\n    </template>\r\n  </Card>\r\n</template>\r\n\r\n<script>\r\nimport CustomazibleButton from \"./HelperComponents/CustomazibleButton.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    \"customazible-button\": CustomazibleButton,\r\n  },\r\n  data() {\r\n    return {\r\n      selected_dataset: \"\",\r\n      datasets: this.getDatasetOptions(),\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    nextPage() {\r\n      if (this.selected_dataset !== \"\") {\r\n        var selected_dataset_selector = {};\r\n        selected_dataset_selector[\"dataset_id\"] =\r\n          this.selected_dataset.dataset_desc\r\n            .split(\"ID: \")[1]\r\n            .substring(\r\n              0,\r\n              this.selected_dataset.dataset_desc.split(\"ID: \")[1].indexOf(\" \")\r\n            );\r\n        selected_dataset_selector[\"dataset_label\"] =\r\n          this.selected_dataset.dataset_desc.split(\"Label: \")[1];\r\n        localStorage.selected_dataset_id =\r\n          selected_dataset_selector[\"dataset_id\"];\r\n        localStorage.selected_dataset_label =\r\n          selected_dataset_selector[\"dataset_label\"];\r\n        this.$emit(\"next-page\", {\r\n          selected_dataset: selected_dataset_selector,\r\n          pageIndex: 0,\r\n        });\r\n      } else {\r\n        this.$toast.add({\r\n          severity: \"warn\",\r\n          summary: \"No Dataset selected\",\r\n          detail: \"Please select dataset\",\r\n          life: 3000,\r\n        });\r\n      }\r\n    },\r\n    getDatasetOptions() {\r\n      this.$axios\r\n        .get(\"/get_datasets_only_name/\" + localStorage.loggedUser)\r\n        .then((res) => {\r\n          var datasets_tmp = [];\r\n          var datasets_tmp_plain_list = [];\r\n          const label_prefix = \"Dataset Category: \";\r\n          for (let index = 0; index < res.data.data.length; index++) {\r\n            if (\r\n              datasets_tmp_plain_list.indexOf(\r\n                label_prefix + res.data.data[index][\"label\"]\r\n              ) < 0\r\n            ) {\r\n              datasets_tmp.push({\r\n                label: label_prefix + res.data.data[index][\"label\"],\r\n                dataset: [],\r\n              });\r\n              datasets_tmp_plain_list.push(\r\n                label_prefix + res.data.data[index][\"label\"]\r\n              );\r\n            }\r\n          }\r\n          for (let index = 0; index < res.data.data.length; index++) {\r\n            var index_dataset_tmp = datasets_tmp_plain_list.indexOf(\r\n              label_prefix + res.data.data[index][\"label\"]\r\n            );\r\n            datasets_tmp[index_dataset_tmp][\"dataset\"].push({\r\n              dataset_desc:\r\n                \"Dataset: \" +\r\n                res.data.data[index][\"name\"] +\r\n                \"   |   \" +\r\n                \"Created: \" +\r\n                res.data.data[index][\"creation_date\"].split(\",\")[1] +\r\n                \"   |   \" +\r\n                \"ID: \" +\r\n                res.data.data[index][\"dataset_id\"] +\r\n                \"   |   \" +\r\n                \"Label: \" +\r\n                res.data.data[index][\"label\"],\r\n            });\r\n          }\r\n          this.datasets = datasets_tmp;\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\nlabel {\r\n  display: block;\r\n}\r\n\r\n.btn-form {\r\n  color: white;\r\n  background: #0d6efd;\r\n  border: 0px solid blue;\r\n  border-radius: 2px;\r\n}\r\n\r\nselect {\r\n  color: black;\r\n}\r\n\r\ninput {\r\n  color: black;\r\n}\r\n\r\ntextarea {\r\n  color: black;\r\n}\r\n</style>"]}]}