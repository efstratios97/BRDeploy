{"remainingRequest":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\src\\components\\Plots\\Chart.vue?vue&type=template&id=050874a1","dependencies":[{"path":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\src\\components\\Plots\\Chart.vue","mtime":1641398527857},{"path":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644423218092},{"path":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\babel-loader\\lib\\index.js","mtime":1644423219187},{"path":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1644423220221},{"path":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644423218092},{"path":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1644423219480}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDxkaXY+DQogICAgPHNwYW4gdi1pZj0iYWxyZWFkeVJlbmRlcmVkID09PSBmYWxzZSI+DQogICAgICA8IS0tIHt7IHRoaXMuZ2V0RGF0YUZvclZpZXcoKSB9fSAtLT4NCiAgICA8L3NwYW4+DQogICAgPGRpdiBjbGFzcz0icC1mbHVpZCI+DQogICAgICA8ZGl2Pg0KICAgICAgICA8YXBleGNoYXJ0IDpvcHRpb25zPSJjaGFydE9wdGlvbnMiIDpzZXJpZXM9ImRhdGFfY2hhcnQiPjwvYXBleGNoYXJ0Pg0KICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQogIDwvZGl2Pg0K"},{"version":3,"sources":["C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\src\\components\\Plots\\Chart.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC;IACF,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClB,CAAC,CAAC,CAAC,CAAC;QACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrE,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/efstr/OneDrive/Desktop/ProjectAthena/AthenaSRC/FrontEnd/src/components/Plots/Chart.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div>\r\n    <span v-if=\"alreadyRendered === false\">\r\n      <!-- {{ this.getDataForView() }} -->\r\n    </span>\r\n    <div class=\"p-fluid\">\r\n      <div>\r\n        <apexchart :options=\"chartOptions\" :series=\"data_chart\"></apexchart>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  props: [\"selected_dataset_id\", \"selected_dataset_label\"],\r\n  data() {\r\n    return {\r\n      // selected_dataset_id: \"\",\r\n      // selected_dataset_label: \"\",\r\n      alreadyRendered: false,\r\n      title_chart: \"Rendering Data....\",\r\n      subtitle_chart: \"Please wait...\",\r\n      legend_show_chart: false,\r\n      data_for_chart: [{ x: \"Initiating...\", y: 1 }],\r\n      chart_type: \"bar\",\r\n      chart_width: \"150%\",\r\n      chart_height: \"150%\",\r\n      xaxis_categories: [],\r\n      data_chart: [\r\n        {\r\n          data: this.data_for_chart,\r\n        },\r\n      ],\r\n      chartOptions: {\r\n        chart: {\r\n          type: this.chart_type,\r\n          width: this.chart_width,\r\n          height: this.chart_height,\r\n        },\r\n        legend: {\r\n          show: this.legend_show_chart,\r\n        },\r\n        xaxis: {\r\n          categories: this.xaxis_categories,\r\n        },\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    getDataForView() {\r\n      this.$axios\r\n        .get(\r\n          \"/get_data_for_view/\" +\r\n            this.selected_dataset_id +\r\n            \"/\" +\r\n            this.selected_dataset_label +\r\n            \"/\" +\r\n            \"bar\"\r\n        )\r\n        .then((res) => {\r\n          this.data_chart = [{ data: res.data }];\r\n          console.log(this.data_chart);\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Departments by # of Application Analysis Successful\",\r\n            detail:\r\n              \"The Departments by # of Application Analysis was successful\",\r\n            life: 3000,\r\n          });\r\n          this.updateChartOptions();\r\n          this.alreadyRendered = true;\r\n        })\r\n        .catch(() => {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Departments by # of Application Analysis Unsuccessful\",\r\n            detail: \"Please click Back and re-select a dataset!\",\r\n            life: 8000,\r\n          });\r\n        });\r\n    },\r\n    updateChartOptions() {\r\n      this.chartOptions = {\r\n        ...this.chartOptions,\r\n        ...{\r\n          chart: {\r\n            type: this.chart_type,\r\n            width: this.chart_width,\r\n            height: this.chart_height,\r\n          },\r\n          legend: {\r\n            show: this.legend_show_chart,\r\n          },\r\n          xaxis: {\r\n            categories: this.xaxis_categories,\r\n          },\r\n        },\r\n      };\r\n      this.retrievingGraph = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]}]}