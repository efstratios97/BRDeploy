{"remainingRequest":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\frontend\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\frontend\\src\\components\\Plots\\KPIApplicabilityGauge.vue?vue&type=template&id=a088808a","dependencies":[{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\frontend\\src\\components\\Plots\\KPIApplicabilityGauge.vue","mtime":1638160211945},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\frontend\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\frontend\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDxkaXY+DQogICAgPGZ1c2lvbmNoYXJ0cw0KICAgICAgOmlkPSJpZCINCiAgICAgIDp0eXBlPSJ0eXBlIg0KICAgICAgOndpZHRoPSJ3aWR0aCINCiAgICAgIDpoZWlnaHQ9ImhlaWdodCINCiAgICAgIDpkYXRhRm9ybWF0PSJkYXRhRm9ybWF0Ig0KICAgICAgOmRhdGFTb3VyY2U9ImRhdGFTb3VyY2UiDQogICAgPg0KICAgIDwvZnVzaW9uY2hhcnRzPg0KICA8L2Rpdj4NCg=="},{"version":3,"sources":["C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\frontend\\src\\components\\Plots\\KPIApplicabilityGauge.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC;IACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzB;IACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/Strat/Desktop/ProjectAthena/AthenaSRC/frontend/src/components/Plots/KPIApplicabilityGauge.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div>\r\n    <fusioncharts\r\n      :id=\"id\"\r\n      :type=\"type\"\r\n      :width=\"width\"\r\n      :height=\"height\"\r\n      :dataFormat=\"dataFormat\"\r\n      :dataSource=\"dataSource\"\r\n    >\r\n    </fusioncharts>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: [\"id\", \"gauge_value\", \"selected_raw_component\"],\r\n  data() {\r\n    return {\r\n      type: \"hlineargauge\",\r\n      width: \"100%\",\r\n      height: \"19%\",\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        chart: {\r\n          theme: \"fusion\",\r\n          caption: \"Component Applicability Analysis\",\r\n          subcaption: \"Current Data Status of \" + this.selected_raw_component,\r\n          lowerLimit: \"0\",\r\n          upperLimit: \"100\",\r\n          numberSuffix: \"%\",\r\n          chartBottomMargin: \"40\",\r\n          valueFontSize: \"11\",\r\n          valueFontBold: \"1\",\r\n          valueFontColor: \"#000000\",\r\n          baseFontSize: 15,\r\n          exportEnabled: \"1\",\r\n        },\r\n        colorRange: {\r\n          color: [\r\n            {\r\n              minValue: \"0\",\r\n              maxValue: \"40\",\r\n              label: \"Low\",\r\n              code: \"#cc0000\",\r\n            },\r\n            {\r\n              minValue: \"40\",\r\n              maxValue: \"60\",\r\n              label: \"Moderate\",\r\n              code: \"#ffba00\",\r\n            },\r\n            {\r\n              minValue: \"60\",\r\n              maxValue: \"100\",\r\n              label: \"High\",\r\n              code: \"#228b22\",\r\n            },\r\n          ],\r\n        },\r\n        pointers: {\r\n          pointer: [\r\n            {\r\n              value: \"0\",\r\n            },\r\n          ],\r\n        },\r\n        // trendPoints: {\r\n        //   point: [\r\n        //     {\r\n        //       startValue: \"70\",\r\n        //       displayValue: \" \",\r\n        //       dashed: \"1\",\r\n        //       showValues: \"0\",\r\n        //     },\r\n        //     {\r\n        //       startValue: \"85\",\r\n        //       displayValue: \" \",\r\n        //       dashed: \"1\",\r\n        //       showValues: \"0\",\r\n        //     },\r\n        //     {\r\n        //       startValue: \"70\",\r\n        //       endValue: \"85\",\r\n        //       displayValue: \" \",\r\n        //       alpha: \"40\",\r\n        //     },\r\n        //   ],\r\n        // },\r\n        annotations: {\r\n          origw: \"400\",\r\n          origh: \"190\",\r\n          autoscale: \"1\",\r\n          groups: [\r\n            {\r\n              id: \"range\",\r\n              items: [\r\n                {\r\n                  id: \"rangeBg\",\r\n                  type: \"rectangle\",\r\n                  x: \"$chartCenterX-115\",\r\n                  y: \"$chartEndY-35\",\r\n                  tox: \"$chartCenterX +115\",\r\n                  toy: \"$chartEndY-15\",\r\n                  fillcolor: \"#0075c2\",\r\n                },\r\n                {\r\n                  id: \"rangeText\",\r\n                  type: \"Text\",\r\n                  fontSize: \"15\",\r\n                  fillcolor: \"#ffffff\",\r\n                  text: \"Recommended Data Status : >40%\",\r\n                  x: \"$chartCenterX\",\r\n                  y: \"$chartEndY-25\",\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    update_value(gauge_value) {\r\n      console.log(this.id);\r\n      var chartRef = FusionCharts(this.id),\r\n        strData = \"&value=\" + gauge_value;\r\n      chartRef.feedData(strData);\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]}]}