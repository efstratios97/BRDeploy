{"remainingRequest":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\project_athena\\project-athena\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\project_athena\\project-athena\\src\\components\\DashboardDataHealth.vue?vue&type=style&index=0&id=7a0fa54c&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\project_athena\\project-athena\\src\\components\\DashboardDataHealth.vue","mtime":1620002680397},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\project_athena\\project-athena\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\project_athena\\project-athena\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\project_athena\\project-athena\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\project_athena\\project-athena\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\project_athena\\project-athena\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouY29tcG9uZW50LWNhcmQgew0KICBtYXJnaW4tdG9wOiAzMHB4Ow0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQogIGRpc3BsYXk6IGZsZXg7DQogIGZsZXgtZ3JvdzogMTsNCiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsNCiAgbWluLXdpZHRoOiAwOw0KICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7DQogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7DQogIGJhY2tncm91bmQtY2xpcDogYm9yZGVyLWJveDsNCiAgYm9yZGVyLXJhZGl1czogMC4yNXJlbTsNCiAgcmVzaXplOiBib3RoOw0KICBvdmVyZmxvdzogYXV0bzsNCiAgbWFyZ2luLXJpZ2h0OiAxMHB4Ow0KICBtYXJnaW4tbGVmdDogMTBweDsNCn0NCg0KLmNlbnRlcmVkLWNoYXJ0IHsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCn0NCg0KLnAtbXVsdGlzZWxlY3Qgew0KICBtYXgtd2lkdGg6IDgwMHB4Ow0KfQ0KDQoucC1tdWx0aXNlbGVjdC1sYWJlbDpub3QoLnAtcGxhY2Vob2xkZXIpIHsNCiAgcGFkZGluZy10b3A6IDAuMjVyZW07DQogIHBhZGRpbmctYm90dG9tOiAwLjI1cmVtOw0KfQ0KLnNlbGVjdGVkLWl0ZW0tdmFsdWUgew0KICBwYWRkaW5nOiAwLjI1cmVtIDAuNXJlbTsNCiAgYm9yZGVyLXJhZGl1czogM3B4Ow0KICAvKiBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7ICovDQogIG1hcmdpbi1ib3R0b206IDAuNXJlbTsNCiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeS1jb2xvcik7DQogIGNvbG9yOiB2YXIoLS1wcmltYXJ5LWNvbG9yLXRleHQpOw0KfQ0KDQpAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5MDBweCkgew0KICAucC1tdWx0aXNlbGVjdCB7DQogICAgd2lkdGg6IDEwMCU7DQogIH0NCn0NCg=="},{"version":3,"sources":["C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\project_athena\\project-athena\\src\\components\\DashboardDataHealth.vue"],"names":[],"mappings":"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","file":"C:/Users/Strat/Desktop/ProjectAthena/AthenaSRC/FrontEnd/project_athena/project-athena/src/components/DashboardDataHealth.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div>\r\n    <TabView class=\"tabview-custom\" ref=\"tabview4\">\r\n      <TabPanel>\r\n        <template #header>\r\n          <b-icon-pie-chart style=\"font-size: 18px; margin: 3px\" />\r\n          <span><h4>Departments by # of Applications</h4></span>\r\n        </template>\r\n        <div class=\"container-...\">\r\n          <div class=\"row row-cols-auto auto-cols-adj\">\r\n            <Card class=\"component-card\">\r\n              <template v-slot:title> Treemap </template>\r\n              <template v-slot:subtitle>\r\n                Departments by # of Applications as Treemap representation\r\n              </template>\r\n              <template v-slot:content>\r\n                <div class=\"p-fluid\">\r\n                  <div id=\"chart-treemap\">\r\n                    <apexchart\r\n                      type=\"treemap\"\r\n                      height=\"350\"\r\n                      :options=\"chartOptions\"\r\n                      :series=\"deparmtentApplicationRankingData\"\r\n                    ></apexchart>\r\n                  </div>\r\n                </div>\r\n              </template>\r\n              <template v-slot:footer> </template>\r\n            </Card>\r\n            <Card class=\"component-card\">\r\n              <template v-slot:title> BarChart </template>\r\n              <template v-slot:subtitle>\r\n                Departments by # of Applications as BarChart representation\r\n              </template>\r\n              <template v-slot:content>\r\n                <div class=\"p-fluid\">\r\n                  <div id=\"chart-bar\">\r\n                    <apexchart\r\n                      type=\"bar\"\r\n                      height=\"350\"\r\n                      :options=\"chartOptions\"\r\n                      :series=\"deparmtentApplicationRankingData\"\r\n                    ></apexchart>\r\n                  </div>\r\n                </div>\r\n              </template>\r\n              <template v-slot:footer> </template>\r\n            </Card>\r\n            <Card class=\"component-card centered-chart\">\r\n              <template v-slot:title> PieChart </template>\r\n              <template v-slot:subtitle>\r\n                Departments by # of Applications as PieChart representation\r\n              </template>\r\n              <template v-slot:content>\r\n                <div class=\"p-fluid\">\r\n                  <div id=\"chart-pie\">\r\n                    <apexchart\r\n                      type=\"pie\"\r\n                      width=\"800\"\r\n                      min-height=\"650\"\r\n                      :options=\"chartOptionsPieChart\"\r\n                      :series=\"deparmtentApplicationRankingDataPieChart\"\r\n                    ></apexchart>\r\n                  </div>\r\n                </div>\r\n              </template>\r\n              <template v-slot:footer> </template>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </TabPanel>\r\n      <TabPanel>\r\n        <template #header>\r\n          <b-icon-compass style=\"font-size: 18px; margin: 3px\" />\r\n          <span><h4>Examine Application Status</h4></span>\r\n        </template>\r\n        <div class=\"container-...\">\r\n          <div class=\"row row-cols-auto auto-cols-adj\">\r\n            <Card class=\"component-card centered-chart\">\r\n              <template v-slot:title> ApplicationRadar </template>\r\n              <template v-slot:subtitle>\r\n                # of Key Characteristics of multiple Apps\r\n              </template>\r\n              <template v-slot:content>\r\n                <span v-if=\"retrievingGraph == false\">\r\n                  <form>\r\n                    <MultiSelect\r\n                      v-model=\"selected_apps\"\r\n                      :options=\"apps\"\r\n                      :filter=\"true\"\r\n                      optionLabel=\"app\"\r\n                      placeholder=\"Select Applications\"\r\n                      filterPlaceholder=\"Find an Application\"\r\n                      class=\"multiselect-custom\"\r\n                      :showClear=\"true\"\r\n                    />\r\n\r\n                    <Button\r\n                      label=\"Apply\"\r\n                      @click=\"getRadarDataMultiple\"\r\n                      icon=\"pi pi-check\"\r\n                      iconPos=\"right\"\r\n                    />\r\n                  </form>\r\n                  <div class=\"p-fluid\">\r\n                    <div id=\"chart\">\r\n                      <apexchart\r\n                        type=\"radar\"\r\n                        width=\"1200\"\r\n                        :options=\"chartOptionsRadarMultiple\"\r\n                        :series=\"radarDataMultiple\"\r\n                      ></apexchart>\r\n                    </div>\r\n                  </div>\r\n                </span>\r\n                <span v-else>\r\n                  <ProgressBar mode=\"indeterminate\" />\r\n                </span>\r\n              </template>\r\n            </Card>\r\n            <Card class=\"component-card centered-chart\">\r\n              <template v-slot:title> ApplicationRadar </template>\r\n              <template v-slot:subtitle>\r\n                # of Key Characteristics of a single App\r\n              </template>\r\n              <template v-slot:content>\r\n                <form>\r\n                  <Dropdown\r\n                    v-model=\"selected_app\"\r\n                    :options=\"apps\"\r\n                    optionLabel=\"app\"\r\n                    placeholder=\"Select an Application\"\r\n                    :filter=\"true\"\r\n                    filterPlaceholder=\"Find an Application\"\r\n                    :showClear=\"true\"\r\n                  />\r\n                  <Button\r\n                    label=\"Apply\"\r\n                    @click=\"getRadarData\"\r\n                    icon=\"pi pi-check\"\r\n                    iconPos=\"right\"\r\n                  />\r\n                </form>\r\n                <div class=\"p-fluid\">\r\n                  <div id=\"chart-radar\">\r\n                    <apexchart\r\n                      type=\"radar\"\r\n                      width=\"1200\"\r\n                      :options=\"chartOptionsRadar\"\r\n                      :series=\"radarData\"\r\n                    ></apexchart>\r\n                  </div>\r\n                </div>\r\n              </template>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </TabPanel>\r\n      <TabPanel>\r\n        <template #header>\r\n          <b-icon-columns style=\"font-size: 18px; margin: 3px\" />\r\n          <span><h4>Analyze Architecture Views Applicability</h4></span>\r\n        </template>\r\n        <div class=\"container-...\">\r\n          <div class=\"row row-cols-auto auto-cols-adj\">\r\n            <Card class=\"component-card\">\r\n              <template v-slot:title> Department Selection </template>\r\n              <template v-slot:subtitle>\r\n                Select Department to examine\r\n              </template>\r\n              <template v-slot:content>\r\n                <div class=\"p-fluid\">\r\n                  <Dropdown\r\n                    v-model=\"selected_dep_from_dataset\"\r\n                    :options=\"deps_from_dataset\"\r\n                    optionLabel=\"dep\"\r\n                    placeholder=\"Select a Department\"\r\n                    :filter=\"true\"\r\n                    filterPlaceholder=\"Find a Department\"\r\n                    :showClear=\"true\"\r\n                  />\r\n                </div>\r\n              </template>\r\n              <template v-slot:footer> </template>\r\n            </Card>\r\n            <Card class=\"component-card\">\r\n              <template v-slot:title> Architecture Views Selection </template>\r\n              <template v-slot:subtitle>\r\n                Select Architecture Views to apply\r\n              </template>\r\n              <template v-slot:content>\r\n                <div class=\"p-fluid\">\r\n                  <Dropdown\r\n                    v-model=\"selected_architecture_view\"\r\n                    :options=\"architecture_views\"\r\n                    optionLabel=\"architecture_view\"\r\n                    placeholder=\"Select a Architecture View\"\r\n                    :filter=\"true\"\r\n                    filterPlaceholder=\"Find a Architecture View\"\r\n                    :showClear=\"true\"\r\n                  />\r\n                </div>\r\n              </template>\r\n              <template v-slot:footer> </template>\r\n            </Card>\r\n          </div>\r\n          <br />\r\n          <div class=\"p-grid\">\r\n            <div class=\"p-col-4 p-offset-4\">\r\n              <div class=\"p-fluid\">\r\n                <Button\r\n                  label=\"Start Applicability Analysis\"\r\n                  @click=\"applyArchitectureViewAnalysis()\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"container-...\" v-if=\"showApplicabilityAnalysis\">\r\n            <div class=\"row row-cols-auto auto-cols-adj\">\r\n              <Card class=\"component-card\">\r\n                <template v-slot:title> Applicability Analysis </template>\r\n                <template v-slot:subtitle>\r\n                  This Analysis shows the current maintainance level of EAM Data\r\n                  regarding the selected Architecture View for the selected\r\n                  Department\r\n                </template>\r\n                <template v-slot:content>\r\n                  <div class=\"p-fluid\">\r\n                    <div id=\"chartBarArchitectureView\">\r\n                      <apexchart\r\n                        type=\"bar\"\r\n                        height=\"400\"\r\n                        :options=\"chartOptionsArchitectureView\"\r\n                        :series=\"architecture_view_bar_data\"\r\n                      ></apexchart>\r\n                    </div>\r\n                  </div>\r\n                </template>\r\n                <template v-slot:footer> </template>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </TabPanel>\r\n      <TabPanel>\r\n        <template #header>\r\n          <b-icon-upc style=\"font-size: 18px; margin: 3px\" />\r\n          <span><h4>Architecture Views</h4></span>\r\n        </template>\r\n        <div class=\"container-...\">\r\n          <div class=\"row row-cols-auto auto-cols-adj\">\r\n            <Card class=\"component-card\">\r\n              <template v-slot:title> Architecture Views </template>\r\n              <template v-slot:subtitle>\r\n                Table with all available Architecture Views\r\n              </template>\r\n              <template v-slot:content>\r\n                <div class=\"p-fluid\" @deleted=\"getArchitectureViews()\">\r\n                  <table-architecture-views\r\n                    :key=\"componentKey\"\r\n                  ></table-architecture-views>\r\n                </div>\r\n              </template>\r\n              <template v-slot:footer> </template>\r\n            </Card>\r\n            <Card class=\"component-card\">\r\n              <template v-slot:title> Create Architecture View </template>\r\n              <template v-slot:subtitle>\r\n                Create individual Architecture Views based on your needs\r\n              </template>\r\n              <template v-slot:content>\r\n                <form>\r\n                  <div class=\"p-fluid\">\r\n                    <div class=\"p-inputgroup\">\r\n                      <span class=\"p-inputgroup-addon\">\r\n                        <b-icon-upc />\r\n                      </span>\r\n                      <InputText\r\n                        placeholder=\"Name\"\r\n                        v-model=\"create_architecture_view_name\"\r\n                      />\r\n                    </div>\r\n                    <br />\r\n                    <div class=\"p-inputgroup\">\r\n                      <span class=\"p-inputgroup-addon\">\r\n                        <b-icon-journal-text />\r\n                      </span>\r\n                      <InputText\r\n                        placeholder=\"Description\"\r\n                        v-model=\"create_architecture_view_description\"\r\n                      />\r\n                    </div>\r\n                    <br />\r\n                    <MultiSelect\r\n                      v-model=\"selected_architecture_view_components\"\r\n                      :options=\"architecture_view_components\"\r\n                      optionLabel=\"architecture_view_component\"\r\n                      placeholder=\"Select a Architecture View Component\"\r\n                      :filter=\"true\"\r\n                      filterPlaceholder=\"Find a Architecture View Component\"\r\n                      class=\"multiselect-custom\"\r\n                    />\r\n                    <br />\r\n\r\n                    <div class=\"p-grid p-nogutter p-justify-between\">\r\n                      <Button\r\n                        label=\"Create Architecture View\"\r\n                        @click=\"createArchitectureView()\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </template>\r\n              <template v-slot:footer> </template>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </TabPanel>\r\n    </TabView>\r\n    <div class=\"p-grid p-nogutter p-justify-between\">\r\n      <Button label=\"Back\" @click=\"prevPage()\" icon=\"pi pi-angle-left\" />\r\n    </div>\r\n    <br />\r\n  </div>\r\n</template>\r\n<script>\r\nimport TableArchitectureViews from \"../components/TableArchitectureViews.vue\";\r\n\r\nexport default {\r\n  props: [\"selected_dataset\"],\r\n  components: {\r\n    \"table-architecture-views\": TableArchitectureViews,\r\n  },\r\n  data() {\r\n    this.DeparmtentApplicationRankingData();\r\n    this.getApps();\r\n    return {\r\n      componentKey: 0,\r\n      selected_app: \"\",\r\n      selected_apps: \"\",\r\n      selected_architecture_view_components: \"\",\r\n      selected_dep_from_dataset: \"\",\r\n      selected_architecture_view: \"\",\r\n      create_architecture_view_description: \"\",\r\n      create_architecture_view_name: \"\",\r\n      architecture_views_all: \"\",\r\n      apps: [],\r\n      retrievingGraph: false,\r\n      showApplicabilityAnalysis: false,\r\n      deps_from_dataset: this.getDepartmentsFromDataset(),\r\n      architecture_views: this.getArchitectureViews(),\r\n      architecture_view_components: this.getComponents(),\r\n      deparmtentApplicationRankingData: [\r\n        {\r\n          data: [{ x: \"Initiating...\", y: 1 }],\r\n        },\r\n      ],\r\n      chartOptions: {\r\n        legend: {\r\n          show: false,\r\n        },\r\n        title: {\r\n          text: \"Departments by # of Applications\",\r\n        },\r\n      },\r\n      deparmtentApplicationRankingDataPieChart: [],\r\n      chartOptionsPieChart: {\r\n        chart: {\r\n          type: \"pie\",\r\n        },\r\n        labels: [\"Initiating...\"],\r\n        responsive: [\r\n          {\r\n            breakpoint: 480,\r\n            options: {\r\n              chart: {},\r\n              legend: {\r\n                position: \"bottom\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      radarData: [{ data: [1, 1, 1] }],\r\n      chartOptionsRadar: {\r\n        chart: {\r\n          type: \"radar\",\r\n        },\r\n        title: {},\r\n        xaxis: {\r\n          categories: [\"Initiating...\", \"Initiating...\", \"Initiating...\"],\r\n        },\r\n      },\r\n      radarDataMultiple: [{ data: [1, 1, 1] }],\r\n      chartOptionsRadarMultiple: {\r\n        chart: {\r\n          type: \"radar\",\r\n          dropShadow: {\r\n            enabled: true,\r\n            blur: 1,\r\n            left: 1,\r\n            top: 1,\r\n          },\r\n        },\r\n        title: {},\r\n        stroke: {\r\n          width: 2,\r\n        },\r\n        fill: {\r\n          opacity: 0.1,\r\n        },\r\n        markers: {\r\n          size: 0,\r\n        },\r\n        xaxis: {\r\n          categories: [\"Initiating...\", \"Initiating...\", \"Initiating...\"],\r\n        },\r\n      },\r\n      architecture_view_bar_data: [\r\n        {\r\n          name: \"Initiating\",\r\n          data: [1],\r\n        },\r\n      ],\r\n      chartOptionsArchitectureView: {\r\n        chart: {\r\n          type: \"bar\",\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            borderRadius: 10,\r\n            dataLabels: {\r\n              position: \"top\", // top, center, bottom\r\n            },\r\n          },\r\n        },\r\n        dataLabels: {\r\n          enabled: true,\r\n          formatter: function (val) {\r\n            return val + \"%\";\r\n          },\r\n          offsetY: -20,\r\n          style: {\r\n            fontSize: \"12px\",\r\n            colors: [\"#304758\"],\r\n          },\r\n        },\r\n        stroke: {\r\n          colors: [\"transparent\"],\r\n          width: 10,\r\n        },\r\n        xaxis: {\r\n          categories: [\"Initiating...\"],\r\n          position: \"bottom\",\r\n          axisBorder: {\r\n            show: false,\r\n          },\r\n          axisTicks: {\r\n            show: false,\r\n          },\r\n          crosshairs: {\r\n            fill: {\r\n              type: \"gradient\",\r\n              gradient: {\r\n                colorFrom: \"#D8E3F0\",\r\n                colorTo: \"#BED1E6\",\r\n                stops: [0, 100],\r\n                opacityFrom: 0.4,\r\n                opacityTo: 0.5,\r\n              },\r\n            },\r\n          },\r\n          tooltip: {\r\n            enabled: true,\r\n          },\r\n        },\r\n        yaxis: {\r\n          axisBorder: {\r\n            show: false,\r\n          },\r\n          axisTicks: {\r\n            show: false,\r\n          },\r\n          labels: {\r\n            show: false,\r\n            formatter: function (val) {\r\n              return val + \"%\";\r\n            },\r\n          },\r\n        },\r\n        title: {\r\n          text: \"Applicability Analysis\",\r\n          floating: true,\r\n          align: \"center\",\r\n          style: {\r\n            color: \"#444\",\r\n            position: \"top\",\r\n          },\r\n        },\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    prevPage() {\r\n      this.$emit(\"prev-page\", { pageIndex: 1 });\r\n    },\r\n    applyArchitectureViewAnalysis() {\r\n      this.showApplicabilityAnalysis = true;\r\n      var selected_architecture_view = \"\";\r\n      for (let index = 0; index < this.architecture_views_all.length; index++) {\r\n        if (\r\n          this.architecture_views_all[index].name ===\r\n          this.selected_architecture_view.architecture_view\r\n        ) {\r\n          selected_architecture_view = this.architecture_views_all[index]\r\n            .architecture_view_id;\r\n        }\r\n      }\r\n      this.axios\r\n        .post(\r\n          \"http://127.0.0.1:8081/analyze_applicability/\" +\r\n            this.selected_dataset +\r\n            \"/\" +\r\n            selected_architecture_view +\r\n            \"/\" +\r\n            this.selected_dep_from_dataset.dep\r\n        )\r\n        .then((res) => {\r\n          this.architecture_view_bar_data = res.data[0];\r\n          this.updateDataLabelsArchitecureViewBar(res.data[1]);\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Architecture View Applicability Analysis Successful\",\r\n            detail:\r\n              \"The Architecture View Applicability Analysis was successful\",\r\n            life: 3000,\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Architecture View Applicability Analysis Unsuccessful\",\r\n            detail: \"Select Parameters OR  click Back and re-select a dataset!\",\r\n            life: 3000,\r\n          });\r\n        });\r\n    },\r\n    createArchitectureView() {\r\n      this.submitted = true;\r\n      this.formData = new FormData();\r\n      this.formData.append(\"name\", this.create_architecture_view_name);\r\n      this.formData.append(\r\n        \"description\",\r\n        this.create_architecture_view_description\r\n      );\r\n      var components_string = \"\";\r\n      for (\r\n        let index = 0;\r\n        index < this.selected_architecture_view_components.length;\r\n        index++\r\n      ) {\r\n        components_string += this.selected_architecture_view_components[index]\r\n          .architecture_view_component;\r\n        if (index < this.selected_architecture_view_components.length - 1) {\r\n          components_string += \",\";\r\n        }\r\n      }\r\n      this.formData.append(\"components\", components_string);\r\n      this.axios\r\n        .post(\"http://127.0.0.1:8081/create_architecture_view\", this.formData)\r\n        .then(() => {\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Architecture View Creation Successful\",\r\n            detail: \"The selected Architecture View was created\",\r\n            life: 3000,\r\n          });\r\n          this.getArchitectureViews();\r\n          this.componentKey += 1;\r\n        })\r\n        .catch(() => {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Architecture View Creation Unsuccessful\",\r\n            detail: \"Check if Architecture View Name already exists\",\r\n            life: 3000,\r\n          });\r\n        });\r\n    },\r\n    getArchitectureViews() {\r\n      this.axios\r\n        .get(\"http://127.0.0.1:8081/get_architecture_views\")\r\n        .then((res) => {\r\n          this.architecture_views_all = res.data.data;\r\n          var data_tmp = [];\r\n          for (let index = 0; index < res.data.data.length; index++) {\r\n            data_tmp.push({\r\n              architecture_view: res.data.data[index].name,\r\n            });\r\n          }\r\n          this.architecture_views = data_tmp;\r\n        });\r\n    },\r\n    getDepartmentsFromDataset() {\r\n      this.axios\r\n        .get(\r\n          \"http://127.0.0.1:8081/get_departments_from_dataset/\" +\r\n            this.selected_dataset\r\n        )\r\n        .then((res) => {\r\n          var data_tmp = [{ dep: \"All\" }];\r\n          for (let index = 0; index < res.data.data.length; index++) {\r\n            if (res.data.data[index] !== null) {\r\n              data_tmp.push({ dep: res.data.data[index] });\r\n            }\r\n          }\r\n          this.deps_from_dataset = data_tmp;\r\n        });\r\n    },\r\n    getComponents() {\r\n      this.axios\r\n        .get(\"http://127.0.0.1:8081/get_components/\" + this.selected_dataset)\r\n        .then((res) => {\r\n          var data_tmp = [];\r\n          for (let index = 0; index < res.data.data.length; index++) {\r\n            data_tmp.push({\r\n              architecture_view_component: res.data.data[index],\r\n            });\r\n          }\r\n          this.architecture_view_components = data_tmp;\r\n        });\r\n    },\r\n    DeparmtentApplicationRankingData() {\r\n      this.axios\r\n        .get(\r\n          \"http://127.0.0.1:8081/get_data_for_treemap_ranking/\" +\r\n            this.selected_dataset\r\n        )\r\n        .then((res) => {\r\n          this.deparmtentApplicationRankingData = [{ data: res.data }];\r\n          this.updateDataLabelsPieChart(res.data);\r\n          this.DeparmtentApplicationRankingDataPieChart(res.data);\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Departments by # of Application Analysis Successful\",\r\n            detail:\r\n              \"The Departments by # of Application Analysis was successful\",\r\n            life: 3000,\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Departments by # of Application Analysis Unsuccessful\",\r\n            detail: \"Please click Back and re-select a dataset!\",\r\n            life: 8000,\r\n          });\r\n        });\r\n    },\r\n    DeparmtentApplicationRankingDataPieChart(data) {\r\n      for (const key of Object.keys(data)) {\r\n        this.deparmtentApplicationRankingDataPieChart.push(data[key][\"y\"]);\r\n      }\r\n    },\r\n    getRadarData() {\r\n      this.axios\r\n        .get(\r\n          \"http://127.0.0.1:8081/get_data_for_radar_app/\" +\r\n            this.selected_dataset +\r\n            \"/\" +\r\n            this.selected_app.app\r\n        )\r\n        .then((res) => {\r\n          var data = res.data[0].data.map(function (x) {\r\n            return parseInt(x);\r\n          });\r\n          this.radarData[0].data = data;\r\n          this.updateDataLabelsRadar(res.data[1].labels);\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"ApplicationRadar Analysis Successful\",\r\n            detail: \"The ApplicationRadar Analysis was successful\",\r\n            life: 3000,\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"ApplicationRadar Analysis Unsuccessful\",\r\n            detail: \"Select Parameters OR  click Back and re-select a dataset!\",\r\n            life: 3000,\r\n          });\r\n        });\r\n    },\r\n    updateDataLabelsRadar(data) {\r\n      this.chartOptionsRadar = {\r\n        ...this.chartOptionsRadar,\r\n        ...{\r\n          xaxis: {\r\n            categories: data,\r\n          },\r\n        },\r\n      };\r\n    },\r\n    updateDataLabelsArchitecureViewBar(data) {\r\n      this.chartOptionsArchitectureView = {\r\n        ...this.chartOptionsArchitectureView,\r\n        ...{\r\n          xaxis: {\r\n            categories: data,\r\n          },\r\n        },\r\n      };\r\n    },\r\n    updateDataLabelsPieChart(data) {\r\n      var labels = [];\r\n      for (const key of Object.keys(data)) {\r\n        labels.push(data[key][\"x\"]);\r\n      }\r\n      this.chartOptionsPieChart = {\r\n        ...this.chartOptionsPieChart,\r\n        ...{\r\n          labels: labels,\r\n        },\r\n      };\r\n    },\r\n    getRadarDataMultiple() {\r\n      this.radarDataMultiple = [];\r\n      this.retrievingGraph = true;\r\n      for (let index = 0; index < this.selected_apps.length; index++) {\r\n        var selected_app = this.selected_apps[index].app;\r\n        this.axios\r\n          .get(\r\n            \"http://127.0.0.1:8081/get_data_for_radar_app/\" +\r\n              this.selected_dataset +\r\n              \"/\" +\r\n              selected_app\r\n          )\r\n          .then((res) => {\r\n            var data = res.data[0].data.map(function (x) {\r\n              return parseInt(x);\r\n            });\r\n            this.radarDataMultiple.push({\r\n              data: data,\r\n              name: this.selected_apps[index].app,\r\n            });\r\n            this.updateChartOptionsRadarMultiple(res.data[1].labels);\r\n            this.$toast.add({\r\n              severity: \"success\",\r\n              summary: \"ApplicationRadar Analysis Successful\",\r\n              detail: \"The ApplicationRadar Analysis was successful\",\r\n              life: 3000,\r\n            });\r\n          })\r\n          .catch(() => {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"ApplicationRadar Analysis Unsuccessful\",\r\n              detail:\r\n                \"Select Parameters OR  click Back and re-select a dataset!\",\r\n              life: 3000,\r\n            });\r\n          });\r\n      }\r\n    },\r\n    updateChartOptionsRadarMultiple(data) {\r\n      this.chartOptionsRadarMultiple = {\r\n        ...this.chartOptionsRadarMultiple,\r\n        ...{\r\n          xaxis: {\r\n            categories: data,\r\n          },\r\n        },\r\n      };\r\n      this.retrievingGraph = false;\r\n    },\r\n    getApps() {\r\n      this.axios\r\n        .get(\"http://127.0.0.1:8081/get_applications/\" + this.selected_dataset)\r\n        .then((res) => {\r\n          var apps_tmp = [];\r\n          for (let index = 0; index < res.data.length; index++) {\r\n            apps_tmp.push({ app: res.data[index] });\r\n          }\r\n          this.apps = apps_tmp;\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.component-card {\r\n  margin-top: 30px;\r\n  position: relative;\r\n  display: flex;\r\n  flex-grow: 1;\r\n  flex-direction: column;\r\n  min-width: 0;\r\n  word-wrap: break-word;\r\n  background-color: #fff;\r\n  background-clip: border-box;\r\n  border-radius: 0.25rem;\r\n  resize: both;\r\n  overflow: auto;\r\n  margin-right: 10px;\r\n  margin-left: 10px;\r\n}\r\n\r\n.centered-chart {\r\n  align-items: center;\r\n}\r\n\r\n.p-multiselect {\r\n  max-width: 800px;\r\n}\r\n\r\n.p-multiselect-label:not(.p-placeholder) {\r\n  padding-top: 0.25rem;\r\n  padding-bottom: 0.25rem;\r\n}\r\n.selected-item-value {\r\n  padding: 0.25rem 0.5rem;\r\n  border-radius: 3px;\r\n  /* display: inline-block; */\r\n  margin-bottom: 0.5rem;\r\n  background-color: var(--primary-color);\r\n  color: var(--primary-color-text);\r\n}\r\n\r\n@media screen and (max-width: 900px) {\r\n  .p-multiselect {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>"]}]}