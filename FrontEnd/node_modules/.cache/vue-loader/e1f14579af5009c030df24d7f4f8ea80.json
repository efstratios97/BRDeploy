{"remainingRequest":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\frontend\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\frontend\\src\\components\\Plots\\TreeMap.vue?vue&type=template&id=b623aa3e","dependencies":[{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\frontend\\src\\components\\Plots\\TreeMap.vue","mtime":1637029541496},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\frontend\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\frontend\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDxkaXY+DQogICAgPHNwYW4gdi1pZj0iYWxyZWFkeVJlbmRlcmVkID09PSBmYWxzZSI+DQogICAgICB7eyB0aGlzLmdldERlcGFybXRlbnRBcHBsaWNhdGlvblJhbmtpbmdEYXRhKCkgfX0NCiAgICA8L3NwYW4+DQogICAgPGRpdiBjbGFzcz0icC1mbHVpZCI+DQogICAgICA8ZGl2IGlkPSJjaGFydC10cmVlbWFwIj4NCiAgICAgICAgPGFwZXhjaGFydA0KICAgICAgICAgIDp0eXBlPSJjaGFydF90eXBlIg0KICAgICAgICAgIDpvcHRpb25zPSJjaGFydE9wdGlvbnMiDQogICAgICAgICAgOnNlcmllcz0iZGF0YV9jaGFydCINCiAgICAgICAgPjwvYXBleGNoYXJ0Pg0KICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQogIDwvZGl2Pg0K"},{"version":3,"sources":["C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\frontend\\src\\components\\Plots\\TreeMap.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC;IACF,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACd,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/Strat/Desktop/ProjectAthena/AthenaSRC/frontend/src/components/Plots/TreeMap.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div>\r\n    <span v-if=\"alreadyRendered === false\">\r\n      {{ this.getDeparmtentApplicationRankingData() }}\r\n    </span>\r\n    <div class=\"p-fluid\">\r\n      <div id=\"chart-treemap\">\r\n        <apexchart\r\n          :type=\"chart_type\"\r\n          :options=\"chartOptions\"\r\n          :series=\"data_chart\"\r\n        ></apexchart>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  props: [\"selected_dataset_id\", \"selected_dataset_label\"],\r\n  data() {\r\n    return {\r\n      // selected_dataset_id: \"\",\r\n      // selected_dataset_label: \"\",\r\n      alreadyRendered: false,\r\n      title_chart: \"Departments by # of Applications\",\r\n      subtitle_chart: \"\",\r\n      legend_show_chart: false,\r\n      data_for_chart: [{ x: \"Initiating...\", y: 1 }],\r\n      chart_type: \"treemap\",\r\n      chart_width: \"100%\",\r\n      chart_height: \"350\",\r\n      xaxis_categories: [],\r\n      input_fields_id: \"\",\r\n      input_fields: true,\r\n      data_chart: [\r\n        {\r\n          data: this.data_for_chart,\r\n        },\r\n      ],\r\n      chartOptions: {\r\n        chart: {\r\n          type: this.chart_type,\r\n          width: this.chart_width,\r\n          height: this.chart_height,\r\n        },\r\n        legend: {\r\n          show: this.legend_show_chart,\r\n        },\r\n        xaxis: {\r\n          categories: this.xaxis_categories,\r\n          tickPlacement: \"between\",\r\n        },\r\n        labels: [],\r\n      },\r\n\r\n      deparmtentApplicationRankingDataInternal: [\r\n        {\r\n          data: [{ x: \"Initiating...\", y: 1 }],\r\n        },\r\n      ],\r\n      chartOptionsInternal: {\r\n        legend: {\r\n          show: false,\r\n        },\r\n        title: {\r\n          text: \"Departments by # of Applications\",\r\n        },\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    create_plot_and_save_to_executive_dashboard() {\r\n      var formData = {};\r\n      formData[\"title\"] = this.title_chart;\r\n      formData[\"subtitle\"] = this.subtitle_chart;\r\n      formData[\"legend_show\"] = this.legend_show_chart;\r\n      formData[\"dataset_id_for_chart\"] = this.selected_dataset_id;\r\n      formData[\"dataset_label\"] = this.selected_dataset_label;\r\n      formData[\"chart_type\"] = this.chart_type;\r\n      formData[\"chart_width\"] = this.chart_width;\r\n      formData[\"chart_height\"] = this.chart_height;\r\n      formData[\"xaxis_categories\"] = this.xaxis_categories;\r\n      formData[\"input_fields\"] = this.input_fields;\r\n      formData[\"input_fields_id\"] = this.input_fields_id;\r\n      console.log(formData);\r\n      this.$emit(\"plotDataAsForm\", formData);\r\n    },\r\n    updateChartOptions() {\r\n      this.chartOptions = {\r\n        ...this.chartOptions,\r\n        ...{\r\n          chart: {\r\n            type: this.chart_type,\r\n            width: this.chart_width,\r\n            height: this.chart_height,\r\n          },\r\n          legend: {\r\n            show: this.legend_show_chart,\r\n          },\r\n          xaxis: {\r\n            categories: this.xaxis_categories,\r\n          },\r\n        },\r\n      };\r\n      this.alreadyRendered = true;\r\n    },\r\n    getDeparmtentApplicationRankingData() {\r\n      this.$axios\r\n        .get(\"/get_data_for_app_dep_ranking/\" + this.selected_dataset_id)\r\n        .then((res) => {\r\n          this.data_chart = [{ data: res.data }];\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Departments by # of Application Analysis Successful\",\r\n            detail:\r\n              \"The Departments by # of Application Analysis was successful\",\r\n            life: 3000,\r\n          });\r\n          this.updateChartOptions();\r\n        })\r\n        .catch(() => {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Departments by # of Application Analysis Unsuccessful\",\r\n            detail: \"Please click Back and re-select a dataset!\",\r\n            life: 8000,\r\n          });\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>"]}]}