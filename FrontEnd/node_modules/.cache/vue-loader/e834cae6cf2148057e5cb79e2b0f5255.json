{"remainingRequest":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\src\\components\\Plots\\ChartExecutive.vue?vue&type=template&id=ab179b12","dependencies":[{"path":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\src\\components\\Plots\\ChartExecutive.vue","mtime":1641398527857},{"path":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641475120942},{"path":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\babel-loader\\lib\\index.js","mtime":1641475121502},{"path":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1641475096455},{"path":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641475120942},{"path":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1641475096353}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDxkaXY+DQogICAgPHNwYW4gdi1pZj0iYWxyZWFkeVJlbmRlcmVkID09PSBmYWxzZSI+DQogICAgICB7eyB0aGlzLmdldF9wbG90X2NoYXJ0X29wdGlvbnMoKSB9fQ0KICAgIDwvc3Bhbj4NCiAgICA8ZGl2IGNsYXNzPSJwLWZsdWlkIj4NCiAgICAgIDxkaXY+DQogICAgICAgIDxhcGV4Y2hhcnQNCiAgICAgICAgICA6dHlwZT0iY2hhcnRfdHlwZSINCiAgICAgICAgICA6b3B0aW9ucz0iY2hhcnRPcHRpb25zIg0KICAgICAgICAgIDpzZXJpZXM9ImRhdGFfY2hhcnQiDQogICAgICAgID48L2FwZXhjaGFydD4NCiAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KICA8L2Rpdj4NCg=="},{"version":3,"sources":["C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\src\\components\\Plots\\ChartExecutive.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC;IACF,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClB,CAAC,CAAC,CAAC,CAAC;QACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACd,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/efstr/OneDrive/Desktop/ProjectAthena/AthenaSRC/FrontEnd/src/components/Plots/ChartExecutive.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div>\r\n    <span v-if=\"alreadyRendered === false\">\r\n      {{ this.get_plot_chart_options() }}\r\n    </span>\r\n    <div class=\"p-fluid\">\r\n      <div>\r\n        <apexchart\r\n          :type=\"chart_type\"\r\n          :options=\"chartOptions\"\r\n          :series=\"data_chart\"\r\n        ></apexchart>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  props: [\"plot_id\"],\r\n  data() {\r\n    return {\r\n      alreadyRendered: false,\r\n      title_chart: \"Rendering Data....\",\r\n      subtitle_chart: \"Please wait...\",\r\n      legend_show_chart: true,\r\n      data_for_chart: [{ x: \"Initiating...\", y: 1 }],\r\n      chart_type: \"bar\",\r\n      chart_width: \"400\",\r\n      chart_height: \"400\",\r\n      xaxis_categories: [],\r\n      dataset_id_for_chart: \"\",\r\n      dataset_label: \"\",\r\n      input_fields: false,\r\n      input_fields_id: \"\",\r\n      data_chart: [\r\n        {\r\n          data: this.data_for_chart,\r\n        },\r\n      ],\r\n      chartOptions: {\r\n        chart: {\r\n          type: this.chart_type,\r\n          width: this.chart_width,\r\n          height: this.chart_height,\r\n        },\r\n        legend: {\r\n          show: this.legend_show_chart,\r\n        },\r\n        xaxis: {\r\n          categories: this.xaxis_categories,\r\n        },\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    get_plot_chart_options() {\r\n      this.$axios\r\n        .get(\"/get_plot/\" + this.plot_id.plot_id)\r\n        .then((res) => {\r\n          // this.chart_height = res.data.chart_height;\r\n          // this.chart_width = res.data.chart_width;\r\n          this.chart_type = res.data.chart_type;\r\n          // this.legend_show_chart = res.data.legend_show_chart;\r\n          this.dataset_id_for_chart = res.data.dataset_id_for_chart;\r\n          this.dataset_label = res.data.dataset_label;\r\n          this.subtitle_chart = res.data.subtitle;\r\n          this.title_chart = res.data.title;\r\n          this.xaxis_categories = res.data.xaxis_categories;\r\n          this.getDataForView();\r\n          // this.updateChartOptions();\r\n          this.alreadyRendered = true;\r\n        })\r\n        .catch(() => {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Departments by # of Application Analysis Unsuccessful\",\r\n            detail: \"Please click Back and re-select a dataset!\",\r\n            life: 8000,\r\n          });\r\n        });\r\n    },\r\n    getDataForView() {\r\n      this.$axios\r\n        .get(\r\n          \"/get_data_for_view/\" +\r\n            this.dataset_id_for_chart +\r\n            \"/\" +\r\n            this.dataset_label +\r\n            \"/\" +\r\n            this.chart_type +\r\n            \"/\" +\r\n            \"none\"\r\n        )\r\n        .then((res) => {\r\n          if (this.chart_type === \"pie\") {\r\n            this.data_chart = [];\r\n            this.updateDataLabels(res.data);\r\n            this.getDeparmtentApplicationRankingDataPieChart(res.data);\r\n          } else {\r\n            this.data_chart = [{ data: res.data }];\r\n          }\r\n          this.updateChartOptions();\r\n          this.alreadyRendered = true;\r\n          this.$emit(\"title_change\", {\r\n            subtitle_chart: this.subtitle_chart,\r\n            title_chart: this.title_chart,\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Departments by # of Application Analysis Unsuccessful\",\r\n            detail: \"Please click Back and re-select a dataset!\",\r\n            life: 8000,\r\n          });\r\n        });\r\n    },\r\n    updateChartOptions() {\r\n      this.chartOptions = {\r\n        ...this.chartOptions,\r\n        ...{\r\n          chart: {\r\n            type: this.chart_type,\r\n            // width: this.chart_width,\r\n            // height: this.chart_height,\r\n          },\r\n          legend: {\r\n            show: true,\r\n            position: \"bottom\",\r\n          },\r\n          xaxis: {\r\n            categories: this.xaxis_categories,\r\n          },\r\n        },\r\n      };\r\n      this.retrievingGraph = false;\r\n    },\r\n    getDeparmtentApplicationRankingDataPieChart(data) {\r\n      for (const key of Object.keys(data)) {\r\n        this.data_chart.push(data[key][\"y\"]);\r\n      }\r\n    },\r\n    updateDataLabels(data) {\r\n      var labels = [];\r\n      for (const key of Object.keys(data)) {\r\n        labels.push(data[key][\"x\"]);\r\n      }\r\n      this.chartOptions = {\r\n        ...this.chartOptions,\r\n        ...{\r\n          labels: labels,\r\n        },\r\n      };\r\n    },\r\n  },\r\n};\r\n</script>"]}]}