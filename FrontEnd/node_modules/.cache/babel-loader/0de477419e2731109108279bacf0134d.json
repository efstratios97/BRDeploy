{"remainingRequest":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\src\\components\\AddCleanedDataSet.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\src\\components\\AddCleanedDataSet.vue","mtime":1636008270860},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\src\\components\\AddCleanedDataSet.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <Dialog\r\n      v-model:visible=\"cleaned_operation\"\r\n      :breakpoints=\"{ '960px': '75vw', '640px': '100vw' }\"\r\n      :style=\"{ width: '50vw' }\"\r\n    >\r\n      <DataTable\r\n        :value=\"cleaned_rows\"\r\n        v-model:selection=\"selectedCleanedRows\"\r\n        dataKey=\"Name\"\r\n        :paginator=\"true\"\r\n        :rows=\"10\"\r\n        filterDisplay=\"menu\"\r\n        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n        :rowsPerPageOptions=\"[10, 25, 50]\"\r\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n        responsiveLayout=\"scroll\"\r\n        :rowHover=\"true\"\r\n        showGridlines\r\n        stripedRows\r\n        ref=\"dt\"\r\n        p-dataTable\r\n        csvSeparator=\";\"\r\n      >\r\n        <template #header>\r\n          <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n            <h5 class=\"p-m-0\">Cleaned Rows</h5>\r\n            <span class=\"p-input-icon-left\">\r\n              <Button\r\n                icon=\"pi pi-external-link\"\r\n                label=\"Export\"\r\n                @click=\"exportCSV($event)\"\r\n              />\r\n            </span>\r\n            <span class=\"p-input-icon-right\">\r\n              <Button\r\n                icon=\"pi pi-chevron-circle-down\"\r\n                label=\"Close\"\r\n                @click=\"close()\"\r\n              />\r\n            </span>\r\n          </div>\r\n        </template>\r\n        <template #empty>\r\n          <span v-if=\"architecture_view_loading\">\r\n            Loading Cleaned Rows. Please wait.\r\n            <ProgressBar mode=\"indeterminate\" />\r\n          </span>\r\n          <span v-else> There are no Cleaned Rows. </span>\r\n        </template>\r\n        <template #loading>\r\n          Loading Cleaned Rows. Please wait.\r\n          <ProgressBar mode=\"indeterminate\" />\r\n        </template>\r\n        <Column selectionMode=\"multiple\" style=\"min-width: 3rem\"></Column>\r\n        <Column\r\n          v-for=\"col of columns\"\r\n          :field=\"col\"\r\n          :header=\"col\"\r\n          :key=\"col\"\r\n          sortable\r\n        ></Column>\r\n      </DataTable>\r\n    </Dialog>\r\n\r\n    <form>\r\n      <div class=\"p-grid p-fluid\">\r\n        <div class=\"p-col-12 p-md-12\">\r\n          <div class=\"p-inputgroup\">\r\n            <span class=\"p-inputgroup-addon\">\r\n              <i class=\"pi pi-search\"></i>\r\n            </span>\r\n            <Dropdown\r\n              v-model=\"selected_dataset\"\r\n              :options=\"datasets\"\r\n              :filter=\"true\"\r\n              optionLabel=\"dataset\"\r\n              placeholder=\"Choose Dataset\"\r\n              filterPlaceholder=\"Find an Dataset\"\r\n              class=\"multiselect-custom\"\r\n              :showClear=\"true\"\r\n            />\r\n            <Button\r\n              label=\"Find Applicable Cleanser\"\r\n              @click=\"\r\n                toggleShowCleanserSelector();\r\n                getSuitableCleansersOptions();\r\n              \"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div v-if=\"showCleanserSelector\">\r\n        <div class=\"p-grid p-fluid\">\r\n          <div class=\"p-col-12 p-md-12\">\r\n            <div class=\"p-inputgroup\">\r\n              <span class=\"p-inputgroup-addon\">\r\n                <i class=\"pi pi-cog\"></i>\r\n              </span>\r\n              <Dropdown\r\n                v-model=\"selected_cleanser\"\r\n                :options=\"suitable_cleansers\"\r\n                :filter=\"true\"\r\n                optionLabel=\"cleanser.name\"\r\n                placeholder=\"Choose Cleanser\"\r\n                filterPlaceholder=\"Find a Cleanser\"\r\n                class=\"multiselect-custom\"\r\n                :showClear=\"true\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div v-if=\"selected_cleanser !== ''\">\r\n        <h2>Save cleaned Dataset</h2>\r\n        <div class=\"p-grid p-fluid\">\r\n          <div class=\"p-col-12 p-md-12\">\r\n            <div class=\"p-inputgroup\">\r\n              <span class=\"p-inputgroup-addon\">\r\n                <i class=\"pi pi-file\"></i>\r\n              </span>\r\n              <InputText\r\n                placeholder=\"Dataset's Name\"\r\n                v-model=\"name\"\r\n                class=\"inputfield w-full\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"p-grid p-fluid\">\r\n          <div class=\"p-col-12 p-md-12\">\r\n            <Textarea\r\n              placeholder=\"Dataset Description\"\r\n              v-model=\"description\"\r\n              :autoResize=\"true\"\r\n              rows=\"5\"\r\n              cols=\"30\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"p-grid p-fluid\">\r\n          <div class=\"p-col-12 p-md-12\">\r\n            <div class=\"p-inputgroup\">\r\n              <span class=\"p-inputgroup-addon\">\r\n                <i class=\"pi pi-users\"></i>\r\n              </span>\r\n              <MultiSelect\r\n                v-model=\"selected_users\"\r\n                :options=\"users\"\r\n                :filter=\"true\"\r\n                optionLabel=\"user.email\"\r\n                placeholder=\"Assign Users with Access (Optional)\"\r\n                filterPlaceholder=\"Find Users\"\r\n                class=\"multiselect-custom\"\r\n                :showClear=\"true\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"p-grid p-fluid\">\r\n          <div class=\"p-col-12 p-md-12\">\r\n            <div class=\"p-inputgroup\">\r\n              <span class=\"p-inputgroup-addon\">\r\n                <b-icon-building />\r\n              </span>\r\n              <MultiSelect\r\n                v-model=\"selected_departments\"\r\n                :options=\"departments\"\r\n                :filter=\"true\"\r\n                optionLabel=\"dep.name\"\r\n                placeholder=\"Assign Departments with Access (Optional)\"\r\n                filterPlaceholder=\"Find Departments\"\r\n                class=\"multiselect-custom\"\r\n                :showClear=\"true\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"p-grid p-fluid\">\r\n          <div class=\"p-col-12 p-md-12\">\r\n            <Button\r\n              label=\"Save Cleaned Dataset\"\r\n              icon=\"pi pi-plus-circle\"\r\n              iconPos=\"center\"\r\n              @click=\"createCleanedDataSet\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div v-if=\"submitted\">\r\n          <br />\r\n          <ProgressBar mode=\"indeterminate\" v-if=\"submitted\" />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      name: \"\",\r\n      cleaned: \"\",\r\n      description: \"\",\r\n      storageType: true,\r\n      file: \"\",\r\n      users: this.getUsersOptions(),\r\n      departments: this.getDepartmentsOptions(),\r\n      datasets: this.getDatasetOptions(),\r\n      suitable_cleansers: [],\r\n      selected_users: \"\",\r\n      selected_dataset: \"\",\r\n      selected_departments: \"\",\r\n      selected_cleanser: \"\",\r\n      formData: \"\",\r\n      submitted: false,\r\n      cleaned_operation: false,\r\n      selectedCleanedRows: \"\",\r\n      cleaned_rows: \"\",\r\n      columns: \"\",\r\n      showCleanserSelector: false,\r\n    };\r\n  },\r\n  methods: {\r\n    toggleShowCleanserSelector() {\r\n      this.showCleanserSelector = !this.showCleanserSelector;\r\n    },\r\n    getUsersOptions() {\r\n      this.$axios.get(\"/users\").then((res) => {\r\n        var users_tmp = [];\r\n        for (let index = 0; index < res.data.length; index++) {\r\n          users_tmp.push({ user: res.data[index] });\r\n        }\r\n        this.users = users_tmp;\r\n      });\r\n    },\r\n    getDepartmentsOptions() {\r\n      this.$axios.get(\"/departments\").then((res) => {\r\n        var departments_tmp = [];\r\n        for (let index = 0; index < res.data.length; index++) {\r\n          departments_tmp.push({ dep: res.data[index] });\r\n        }\r\n        this.departments = departments_tmp;\r\n      });\r\n    },\r\n    toString(dict_key) {\r\n      var key_word = \"\";\r\n      var object_input = \"\";\r\n      if (dict_key === \"user\") {\r\n        key_word = \"email\";\r\n        object_input = this.selected_users;\r\n      } else if (dict_key === \"dep\") {\r\n        key_word = \"name\";\r\n        object_input = this.selected_departments;\r\n      } else if (dict_key === \"dataset\") {\r\n        object_input = this.selected_datasets;\r\n      } else if (dict_key === \"cleanser\") {\r\n        object_input = this.suitable_cleansers;\r\n      }\r\n      var updt_list = \"\";\r\n      if (dict_key === \"user\" || dict_key === \"dep\") {\r\n        for (let index = 0; index < object_input.length; index++) {\r\n          updt_list = updt_list.concat(object_input[index][dict_key][key_word]);\r\n          updt_list = updt_list.concat(\",\");\r\n        }\r\n      } else if (dict_key === \"dataset\" || dict_key === \"cleanser\") {\r\n        for (let index = 0; index < object_input.length; index++) {\r\n          var temp_elem = object_input[index][dict_key];\r\n          if (dict_key === \"dataset\") {\r\n            temp_elem = object_input[index][dict_key].split(\"ID: \")[1];\r\n          }\r\n          updt_list = updt_list.concat(temp_elem);\r\n          updt_list = updt_list.concat(\",\");\r\n        }\r\n      }\r\n      return updt_list.slice(0, -1);\r\n    },\r\n    createCleanedDataSet() {\r\n      this.$axios\r\n        .get(\r\n          \"/get_cleanser_by_id/\" + this.selected_cleanser.cleanser.cleanser_id\r\n        )\r\n        .then((res) => {\r\n          this.submitted = true;\r\n          this.$toast.add({\r\n            severity: \"info\",\r\n            summary: \"The Dataset is being cleaned\",\r\n            detail: \"Please be aware that this may take few minutes\",\r\n            life: 15000,\r\n          });\r\n          this.selected_cleanser = res.data.data[0];\r\n          this.formData = new FormData();\r\n          this.formData.append(\"name\", this.name);\r\n          this.formData.append(\r\n            \"cleanser_operation_types\",\r\n            this.selected_cleanser.cleanser_operation_types\r\n          );\r\n          this.formData.append(\"cleaned\", this.cleaned);\r\n          this.formData.append(\"description\", this.description);\r\n          this.formData.append(\r\n            \"storage_type\",\r\n            this.storageType === true ? \"cloud\" : \"local\"\r\n          );\r\n          this.formData.append(\"access_user_list\", this.toString(\"user\"));\r\n          this.formData.append(\r\n            \"access_business_unit_list\",\r\n            this.toString(\"dep\")\r\n          );\r\n          this.$axios\r\n            .post(\r\n              \"/create_cleaned_dataset/\" +\r\n                this.selected_cleanser.cleanser_id +\r\n                \"/\" +\r\n                this.selected_dataset[\"dataset\"].split(\"ID: \")[1] +\r\n                \"/\" +\r\n                localStorage.loggedUser,\r\n              this.formData\r\n            )\r\n            .then((res) => {\r\n              this.cleaned_rows = JSON.parse(res.data);\r\n              this.columns = Object.keys(this.cleaned_rows[0]);\r\n              this.submitted = false;\r\n              this.cleaned_operation = true;\r\n              this.$toast.add({\r\n                severity: \"success\",\r\n                summary: \"Cleaned Dataset Creation Successful\",\r\n                detail: \"The cleaned Dataset was created\",\r\n                life: 3000,\r\n              });\r\n            })\r\n            .catch(() => {\r\n              this.$toast.add({\r\n                severity: \"error\",\r\n                summary: \"Cleaned Dataset Creation Unsuccessful\",\r\n                detail: \"The cleaned Dataset could not be created\",\r\n                life: 3000,\r\n              });\r\n              this.submitted = false;\r\n            });\r\n        });\r\n    },\r\n    getDatasetOptions() {\r\n      this.$axios\r\n        .get(\"/get_datasets_only_name/\" + localStorage.loggedUser)\r\n        .then((res) => {\r\n          var datasets_tmp = [];\r\n          for (let index = 0; index < res.data.data.length; index++) {\r\n            datasets_tmp.push({\r\n              dataset:\r\n                \"NAME: \" +\r\n                res.data.data[index][\"name\"] +\r\n                \"   |   \" +\r\n                \"ID: \" +\r\n                res.data.data[index][\"dataset_id\"],\r\n            });\r\n          }\r\n          this.datasets = datasets_tmp;\r\n        });\r\n    },\r\n    getSuitableCleansersOptions() {\r\n      // if (this.selected_dataset === undefined) {\r\n      //   this.selected_dataset = \" \";\r\n      // }\r\n      this.$axios\r\n        .get(\r\n          \"/get_suitable_cleansers/\" +\r\n            this.selected_dataset[\"dataset\"].split(\"ID: \")[1]\r\n        )\r\n        .then((res) => {\r\n          var cleanser_tmp = [];\r\n          for (let index = 0; index < res.data.data.length; index++) {\r\n            cleanser_tmp.push({\r\n              cleanser: res.data.data[index],\r\n            });\r\n          }\r\n          this.suitable_cleansers = cleanser_tmp;\r\n          if (cleanser_tmp.length === 0) {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"No suitable Cleansers available\",\r\n              detail: \"The Dataset has no suitable cleanser\",\r\n              life: 3000,\r\n            });\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"No suitable Cleansers available\",\r\n            detail: \"The Dataset has no suitable cleanser\",\r\n            life: 3000,\r\n          });\r\n        });\r\n    },\r\n    exportCSV() {\r\n      this.$refs.dt.exportCSV();\r\n    },\r\n    close() {\r\n      this.$emit(\"close\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\nlabel {\r\n  display: block;\r\n}\r\n\r\n.btn-form {\r\n  color: white;\r\n  background: #0d6efd;\r\n  border: 0px solid blue;\r\n  border-radius: 2px;\r\n}\r\n\r\nselect {\r\n  color: black;\r\n}\r\n\r\ninput {\r\n  color: black;\r\n}\r\n\r\ntextarea {\r\n  color: black;\r\n}\r\n</style>"],"sourceRoot":""}]}