{"remainingRequest":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\src\\components\\InputForms\\UpdateCleanser.vue?vue&type=template&id=55d4ed4a&scoped=true","dependencies":[{"path":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\src\\components\\InputForms\\UpdateCleanser.vue","mtime":1648241274195},{"path":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648597611796},{"path":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\babel-loader\\lib\\index.js","mtime":1648597612833},{"path":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1648597729364},{"path":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648597727882},{"path":"C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1648597728616}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5kZXNjcmlwdGlvbi5qcyI7CmltcG9ydCB7IGNyZWF0ZUVsZW1lbnRWTm9kZSBhcyBfY3JlYXRlRWxlbWVudFZOb2RlLCByZXNvbHZlQ29tcG9uZW50IGFzIF9yZXNvbHZlQ29tcG9uZW50LCBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVFbGVtZW50QmxvY2sgYXMgX2NyZWF0ZUVsZW1lbnRCbG9jaywgcHVzaFNjb3BlSWQgYXMgX3B1c2hTY29wZUlkLCBwb3BTY29wZUlkIGFzIF9wb3BTY29wZUlkIH0gZnJvbSAidnVlIjsKCnZhciBfd2l0aFNjb3BlSWQgPSBmdW5jdGlvbiBfd2l0aFNjb3BlSWQobikgewogIHJldHVybiBfcHVzaFNjb3BlSWQoImRhdGEtdi01NWQ0ZWQ0YSIpLCBuID0gbigpLCBfcG9wU2NvcGVJZCgpLCBuOwp9OwoKdmFyIF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJwLWdyaWQgcC1mbHVpZCIKfTsKdmFyIF9ob2lzdGVkXzIgPSB7CiAgY2xhc3M6ICJwLWNvbC0xMiBwLW1kLTEyIgp9Owp2YXIgX2hvaXN0ZWRfMyA9IHsKICBjbGFzczogInAtaW5wdXRncm91cCIKfTsKCnZhciBfaG9pc3RlZF80ID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJzcGFuIiwgewogICAgY2xhc3M6ICJwLWlucHV0Z3JvdXAtYWRkb24iCiAgfSwgWy8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJpIiwgewogICAgY2xhc3M6ICJwaSBwaS1jb2ciCiAgfSldLCAtMQogIC8qIEhPSVNURUQgKi8KICApOwp9KTsKCnZhciBfaG9pc3RlZF81ID0gewogIGNsYXNzOiAicC1ncmlkIHAtZmx1aWQiCn07CnZhciBfaG9pc3RlZF82ID0gewogIGNsYXNzOiAicC1jb2wtMTIgcC1tZC0xMiIKfTsKdmFyIF9ob2lzdGVkXzcgPSB7CiAgY2xhc3M6ICJwLWdyaWQgcC1mbHVpZCIKfTsKdmFyIF9ob2lzdGVkXzggPSB7CiAgY2xhc3M6ICJwLWNvbC0xMiBwLW1kLTEyIgp9Owp2YXIgX2hvaXN0ZWRfOSA9IHsKICBjbGFzczogInAtaW5wdXRncm91cCIKfTsKCnZhciBfaG9pc3RlZF8xMCA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgic3BhbiIsIHsKICAgIGNsYXNzOiAicC1pbnB1dGdyb3VwLWFkZG9uIgogIH0sIFsvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaSIsIHsKICAgIGNsYXNzOiAicGkgcGktZmlsZSIKICB9KV0sIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzExID0gewogIGNsYXNzOiAicC1ncmlkIHAtZmx1aWQiCn07CnZhciBfaG9pc3RlZF8xMiA9IHsKICBjbGFzczogInAtY29sLTEyIHAtbWQtMTIiCn07CnZhciBfaG9pc3RlZF8xMyA9IHsKICBjbGFzczogInAtaW5wdXRncm91cCIKfTsKCnZhciBfaG9pc3RlZF8xNCA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgic3BhbiIsIHsKICAgIGNsYXNzOiAicC1pbnB1dGdyb3VwLWFkZG9uIgogIH0sIFsvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaSIsIHsKICAgIGNsYXNzOiAicGkgcGktY29nIgogIH0pXSwgLTEKICAvKiBIT0lTVEVEICovCiAgKTsKfSk7Cgp2YXIgX2hvaXN0ZWRfMTUgPSB7CiAgY2xhc3M6ICJwLWdyaWQgcC1mbHVpZCIKfTsKdmFyIF9ob2lzdGVkXzE2ID0gewogIGNsYXNzOiAicC1jb2wtMTIgcC1tZC0xMiIKfTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9JbnB1dFRleHQgPSBfcmVzb2x2ZUNvbXBvbmVudCgiSW5wdXRUZXh0Iik7CgogIHZhciBfY29tcG9uZW50X1RleHRhcmVhID0gX3Jlc29sdmVDb21wb25lbnQoIlRleHRhcmVhIik7CgogIHZhciBfY29tcG9uZW50X011bHRpU2VsZWN0ID0gX3Jlc29sdmVDb21wb25lbnQoIk11bHRpU2VsZWN0Iik7CgogIHZhciBfY29tcG9uZW50X0J1dHRvbiA9IF9yZXNvbHZlQ29tcG9uZW50KCJCdXR0b24iKTsKCiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZm9ybSIsIG51bGwsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMiwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzMsIFtfaG9pc3RlZF80LCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9JbnB1dFRleHQsIHsKICAgIHBsYWNlaG9sZGVyOiAiQ2xlYW5zZXIncyBOYW1lIiwKICAgIG1vZGVsVmFsdWU6ICRkYXRhLm5hbWUsCiAgICAib25VcGRhdGU6bW9kZWxWYWx1ZSI6IF9jYWNoZVswXSB8fCAoX2NhY2hlWzBdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJGRhdGEubmFtZSA9ICRldmVudDsKICAgIH0pLAogICAgY2xhc3M6ICJpbnB1dGZpZWxkIHctZnVsbCIKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsibW9kZWxWYWx1ZSJdKV0pXSldKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNSwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzYsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9UZXh0YXJlYSwgewogICAgcGxhY2Vob2xkZXI6ICJDbGVhbnNlciBEZXNjcmlwdGlvbiIsCiAgICBtb2RlbFZhbHVlOiAkZGF0YS5kZXNjcmlwdGlvbiwKICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzFdIHx8IChfY2FjaGVbMV0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkZGF0YS5kZXNjcmlwdGlvbiA9ICRldmVudDsKICAgIH0pLAogICAgYXV0b1Jlc2l6ZTogdHJ1ZSwKICAgIHJvd3M6ICI1IiwKICAgIGNvbHM6ICIzMCIKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsibW9kZWxWYWx1ZSJdKV0pXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzcsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF84LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfOSwgW19ob2lzdGVkXzEwLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9NdWx0aVNlbGVjdCwgewogICAgbW9kZWxWYWx1ZTogJGRhdGEuc2VsZWN0ZWRfZGF0YXNldHMsCiAgICAib25VcGRhdGU6bW9kZWxWYWx1ZSI6IF9jYWNoZVsyXSB8fCAoX2NhY2hlWzJdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJGRhdGEuc2VsZWN0ZWRfZGF0YXNldHMgPSAkZXZlbnQ7CiAgICB9KSwKICAgIG9wdGlvbnM6ICRkYXRhLmRhdGFzZXRzLAogICAgZmlsdGVyOiB0cnVlLAogICAgb3B0aW9uTGFiZWw6ICJkYXRhc2V0IiwKICAgIHBsYWNlaG9sZGVyOiAiQXNzaWduIGFwcGxpY2FibGUgRGF0YXNldHMiLAogICAgZmlsdGVyUGxhY2Vob2xkZXI6ICJGaW5kIERhdGFzZXRzIiwKICAgIHNob3dDbGVhcjogdHJ1ZQogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJtb2RlbFZhbHVlIiwgIm9wdGlvbnMiXSldKV0pXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzExLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMTIsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xMywgW19ob2lzdGVkXzE0LCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9NdWx0aVNlbGVjdCwgewogICAgbW9kZWxWYWx1ZTogJGRhdGEuc2VsZWN0ZWRfY2xlYW5zZXJfb3BlcmF0aW9uX3R5cGVzLAogICAgIm9uVXBkYXRlOm1vZGVsVmFsdWUiOiBfY2FjaGVbM10gfHwgKF9jYWNoZVszXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRkYXRhLnNlbGVjdGVkX2NsZWFuc2VyX29wZXJhdGlvbl90eXBlcyA9ICRldmVudDsKICAgIH0pLAogICAgb3B0aW9uczogJGRhdGEuY2xlYW5zZXJfb3BlcmF0aW9uX3R5cGVzLAogICAgZmlsdGVyOiB0cnVlLAogICAgb3B0aW9uTGFiZWw6ICJvcGVyYXRpb24iLAogICAgcGxhY2Vob2xkZXI6ICJBc3NpZ24gYXBwbGljYWJsZSBPcGVyYXRpb25zIiwKICAgIGZpbHRlclBsYWNlaG9sZGVyOiAiRmluZCBPcGVyYXRpb25zIiwKICAgIGNsYXNzOiAibXVsdGlzZWxlY3QtY3VzdG9tIiwKICAgIHNob3dDbGVhcjogdHJ1ZQogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJtb2RlbFZhbHVlIiwgIm9wdGlvbnMiXSldKV0pXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzE1LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMTYsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9CdXR0b24sIHsKICAgIGxhYmVsOiAiVXBkYXRlIENsZWFuc2VyIiwKICAgIGljb246ICJwaSBwaS1yZWZyZXNoIiwKICAgIGljb25Qb3M6ICJjZW50ZXIiLAogICAgb25DbGljazogX2NhY2hlWzRdIHx8IChfY2FjaGVbNF0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy51cGRhdGVDbGVhbnNlcigpOwogICAgfSkKICB9KV0pXSldKTsKfQ=="},{"version":3,"sources":["C:\\Users\\efstr\\OneDrive\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\src\\components\\InputForms\\UpdateCleanser.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <form>\r\n    <div class=\"p-grid p-fluid\">\r\n      <div class=\"p-col-12 p-md-12\">\r\n        <div class=\"p-inputgroup\">\r\n          <span class=\"p-inputgroup-addon\">\r\n            <i class=\"pi pi-cog\"></i>\r\n          </span>\r\n          <InputText\r\n            placeholder=\"Cleanser's Name\"\r\n            v-model=\"name\"\r\n            class=\"inputfield w-full\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"p-grid p-fluid\">\r\n      <div class=\"p-col-12 p-md-12\">\r\n        <Textarea\r\n          placeholder=\"Cleanser Description\"\r\n          v-model=\"description\"\r\n          :autoResize=\"true\"\r\n          rows=\"5\"\r\n          cols=\"30\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"p-grid p-fluid\">\r\n      <div class=\"p-col-12 p-md-12\">\r\n        <div class=\"p-inputgroup\">\r\n          <span class=\"p-inputgroup-addon\">\r\n            <i class=\"pi pi-file\"></i>\r\n          </span>\r\n          <MultiSelect\r\n            v-model=\"selected_datasets\"\r\n            :options=\"datasets\"\r\n            :filter=\"true\"\r\n            optionLabel=\"dataset\"\r\n            placeholder=\"Assign applicable Datasets\"\r\n            filterPlaceholder=\"Find Datasets\"\r\n            :showClear=\"true\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"p-grid p-fluid\">\r\n      <div class=\"p-col-12 p-md-12\">\r\n        <div class=\"p-inputgroup\">\r\n          <span class=\"p-inputgroup-addon\">\r\n            <i class=\"pi pi-cog\"></i>\r\n          </span>\r\n          <MultiSelect\r\n            v-model=\"selected_cleanser_operation_types\"\r\n            :options=\"cleanser_operation_types\"\r\n            :filter=\"true\"\r\n            optionLabel=\"operation\"\r\n            placeholder=\"Assign applicable Operations\"\r\n            filterPlaceholder=\"Find Operations\"\r\n            class=\"multiselect-custom\"\r\n            :showClear=\"true\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"p-grid p-fluid\">\r\n      <div class=\"p-col-12 p-md-12\">\r\n        <Button\r\n          label=\"Update Cleanser\"\r\n          icon=\"pi pi-refresh\"\r\n          iconPos=\"center\"\r\n          @click=\"updateCleanser()\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: [\"cleanser\"],\r\n  data() {\r\n    return {\r\n      name: \"\",\r\n      description: \"\",\r\n      datasets: this.getDatasetOptions(),\r\n      cleanser_operation_types: this.getCleanserOperationTypesOptions(),\r\n      selected_datasets: [],\r\n      selected_cleanser_operation_types: [],\r\n      formData: \"\",\r\n    };\r\n  },\r\n  created() {\r\n    this.name = this.cleanser.name;\r\n    this.description = this.cleanser.description;\r\n    this.cleanser.datasets\r\n      .filter((dataset) => dataset !== \"\" && dataset !== undefined)\r\n      .forEach((dataset) => {\r\n        this.$axios.get(\"/get_dataset/\" + dataset).then((res) => {\r\n          this.selected_datasets.push({\r\n            dataset:\r\n              \"NAME: \" +\r\n              res.data[\"name\"] +\r\n              \"   |   \" +\r\n              \"ID: \" +\r\n              res.data[\"dataset_id\"],\r\n          });\r\n        });\r\n      });\r\n    this.cleanser.cleanser_operation_types.forEach((operation_type) => {\r\n      this.selected_cleanser_operation_types.push({\r\n        operation: operation_type,\r\n      });\r\n    });\r\n  },\r\n  methods: {\r\n    getDatasetOptions() {\r\n      this.$axios\r\n        .get(\"/get_datasets_only_name/\" + localStorage.loggedUser)\r\n        .then((res) => {\r\n          var datasets_tmp = [];\r\n          for (let index = 0; index < res.data.data.length; index++) {\r\n            datasets_tmp.push({\r\n              dataset:\r\n                \"NAME: \" +\r\n                res.data.data[index][\"name\"] +\r\n                \"   |   \" +\r\n                \"ID: \" +\r\n                res.data.data[index][\"dataset_id\"],\r\n            });\r\n          }\r\n          this.datasets = datasets_tmp;\r\n        });\r\n    },\r\n    getCleanserOperationTypesOptions() {\r\n      this.$axios.get(\"/get_cleanser_operation_types\").then((res) => {\r\n        var cleanser_operation_types_tmp = [];\r\n        for (let index = 0; index < res.data.data[0].length; index++) {\r\n          cleanser_operation_types_tmp.push({\r\n            operation: res.data.data[0][index],\r\n          });\r\n        }\r\n        this.cleanser_operation_types = cleanser_operation_types_tmp;\r\n      });\r\n    },\r\n    toString(dict_key) {\r\n      var object_input = \"\";\r\n      if (dict_key === \"dataset\") {\r\n        object_input = this.selected_datasets;\r\n      } else {\r\n        object_input = this.selected_cleanser_operation_types;\r\n      }\r\n      var updt_list = \"\";\r\n      for (let index = 0; index < object_input.length; index++) {\r\n        var temp_elem = object_input[index][dict_key];\r\n        if (dict_key === \"dataset\") {\r\n          temp_elem = object_input[index][dict_key].split(\"ID: \")[1];\r\n        }\r\n        updt_list = updt_list.concat(temp_elem);\r\n        updt_list = updt_list.concat(\",\");\r\n      }\r\n      return updt_list.slice(0, -1);\r\n    },\r\n    updateCleanser() {\r\n      this.formData = new FormData();\r\n      this.formData.append(\"cleanser_id\", this.cleanser.cleanser_id);\r\n      this.formData.append(\"name\", this.name);\r\n      this.formData.append(\"datasets\", this.toString(\"dataset\"));\r\n      this.formData.append(\"description\", this.description);\r\n      this.formData.append(\r\n        \"cleanser_operation_types\",\r\n        this.toString(\"operation\")\r\n      );\r\n      this.$axios\r\n        .post(\"/update_cleanser_object\", this.formData)\r\n        .then(() => {\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Cleanser Update Successful\",\r\n            detail: \"The selected Cleanser was updated\",\r\n            life: 3000,\r\n          });\r\n          this.$emit(\"close\");\r\n        })\r\n        .catch(() => {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Cleanser Update Unsuccessful\",\r\n            detail:\r\n              \"The selected Cleanser could not be updated! Check if given Name is a duplicate!\",\r\n            life: 3000,\r\n          });\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\nlabel {\r\n  display: block;\r\n}\r\n\r\n.btn-form {\r\n  color: white;\r\n  background: #0d6efd;\r\n  border: 0px solid blue;\r\n  border-radius: 2px;\r\n}\r\n\r\nselect {\r\n  color: black;\r\n}\r\n\r\ninput {\r\n  color: black;\r\n}\r\n\r\ntextarea {\r\n  color: black;\r\n}\r\n</style>"],"sourceRoot":""}]}