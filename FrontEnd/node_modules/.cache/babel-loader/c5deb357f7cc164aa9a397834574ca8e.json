{"remainingRequest":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\src\\components\\TableCleanser.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\src\\components\\TableCleanser.vue","mtime":1620393337965},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNsZWFuc2VyczogdGhpcy5saXN0Q2xlYW5zZXJzKCksCiAgICAgIHNlbGVjdGVkX2NsZWFuc2VyOiAiIiwKICAgICAgY2xlYW5zZXJzX2xvYWRpbmc6IHRydWUsCiAgICAgIGNsZWFuc2VyX29wZXJhdGluZzogZmFsc2UKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBub3JtYWxpemVDbGVhbnNlcjogZnVuY3Rpb24gbm9ybWFsaXplQ2xlYW5zZXIoKSB7CiAgICAgIGZvciAodmFyIGluZGV4ID0gMDsgaW5kZXggPCB0aGlzLmNsZWFuc2Vycy5sZW5ndGg7IGluZGV4KyspIHsKICAgICAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy5jbGVhbnNlcnNbaW5kZXhdKSB7CiAgICAgICAgICBpZiAoa2V5ID09PSAiaGVhZGVyX2xpc3QiKSB7CiAgICAgICAgICAgIHRoaXMuY2xlYW5zZXJzW2luZGV4XVtrZXldID0gdGhpcy5jbGVhbnNlcnNbaW5kZXhdW2tleV0uc3BsaXQoIiwiKTsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoa2V5ID09PSAiZGF0YXNldHMiKSB7CiAgICAgICAgICAgIHRoaXMuY2xlYW5zZXJzW2luZGV4XVtrZXldID0gdGhpcy5jbGVhbnNlcnNbaW5kZXhdW2tleV0uc3BsaXQoIiwiKTsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoa2V5ID09PSAiY2xlYW5zZXJfb3BlcmF0aW9uX3R5cGVzIikgewogICAgICAgICAgICB0aGlzLmNsZWFuc2Vyc1tpbmRleF1ba2V5XSA9IHRoaXMuY2xlYW5zZXJzW2luZGV4XVtrZXldLnNwbGl0KCIsIik7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgZGVsZXRlQ2xlYW5zZXI6IGZ1bmN0aW9uIGRlbGV0ZUNsZWFuc2VyKGNsZWFuc2VyX2lkKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBpZiAoY2xlYW5zZXJfaWQgPT09IHVuZGVmaW5lZCkgewogICAgICAgIHRoaXMuJHRvYXN0LmFkZCh7CiAgICAgICAgICBzZXZlcml0eTogIndhcm4iLAogICAgICAgICAgc3VtbWFyeTogIk5vIENsZWFuc2VyIHNlbGVjdGVkIiwKICAgICAgICAgIGRldGFpbDogIlBsZWFzZSBzZWxlY3QgQ2xlYW5zZXIgZmlyc3QiLAogICAgICAgICAgbGlmZTogMzAwMAogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuY2xlYW5zZXJfb3BlcmF0aW5nID0gdHJ1ZTsKICAgICAgfQoKICAgICAgdGhpcy4kYXhpb3MuZGVsZXRlKCIvZGVsZXRlX2NsZWFuc2VyLyIgKyBjbGVhbnNlcl9pZCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMubGlzdENsZWFuc2VycygpOwoKICAgICAgICBpZiAoX3RoaXMuY2xlYW5zZXJfb3BlcmF0aW5nID09IHRydWUpIHsKICAgICAgICAgIF90aGlzLiR0b2FzdC5hZGQoewogICAgICAgICAgICBzZXZlcml0eTogInN1Y2Nlc3MiLAogICAgICAgICAgICBzdW1tYXJ5OiAiQ2xlYW5zZXIgc3VjY2Vzc2Z1bGx5IGRlbGV0ZWQiLAogICAgICAgICAgICBkZXRhaWw6ICJDbGVhbnNlciB3YXMgc3VjY2Vzc2Z1bGx5IGRlbGV0ZWQiLAogICAgICAgICAgICBsaWZlOiAzMDAwCiAgICAgICAgICB9KTsKICAgICAgICB9CgogICAgICAgIF90aGlzLmNsZWFuc2VyX29wZXJhdGluZyA9IGZhbHNlOwogICAgICAgIF90aGlzLnNlbGVjdGVkX2NsZWFuc2VyID0gIiI7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy5jbGVhbnNlcl9vcGVyYXRpbmcgPSBmYWxzZTsKCiAgICAgICAgX3RoaXMuJHRvYXN0LmFkZCh7CiAgICAgICAgICBzZXZlcml0eTogImVycm9yIiwKICAgICAgICAgIHN1bW1hcnk6ICJDbGVhbnNlciBEZWxldGlvbiBVbnN1Y2Nlc3NmdWwiLAogICAgICAgICAgZGV0YWlsOiAiVGhlIHNlbGVjdGVkIENsZWFuc2VyIGNvdWxkIG5vdCBiZSBkZWxldGVkIiwKICAgICAgICAgIGxpZmU6IDMwMDAKICAgICAgICB9KTsKCiAgICAgICAgX3RoaXMuc2VsZWN0ZWRfY2xlYW5zZXIgPSAiIjsKICAgICAgfSk7CiAgICB9LAogICAgc3RyVG9MaXN0OiBmdW5jdGlvbiBzdHJUb0xpc3Qoc3RyaW5ncykgewogICAgICB2YXIgbGlzdF9zdHJpbmcgPSBzdHJpbmdzLnNwbGl0KCIsIik7CiAgICAgIHJldHVybiBsaXN0X3N0cmluZzsKICAgIH0sCiAgICBsaXN0Q2xlYW5zZXJzOiBmdW5jdGlvbiBsaXN0Q2xlYW5zZXJzKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMuJGF4aW9zLmdldCgiL2dldF9jbGVhbnNlcnMiKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpczIuY2xlYW5zZXJzID0gcmVzLmRhdGEuZGF0YTsKCiAgICAgICAgX3RoaXMyLm5vcm1hbGl6ZUNsZWFuc2VyKCk7CgogICAgICAgIGlmIChfdGhpczIuY2xlYW5zZXJzLmxlbmd0aCA9PT0gMCkgewogICAgICAgICAgX3RoaXMyLmNsZWFuc2Vyc19sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["C:\\Users\\Strat\\Desktop\\ProjectAthena\\AthenaSRC\\FrontEnd\\src\\components\\TableCleanser.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <DataTable\r\n    :value=\"cleansers\"\r\n    v-model:selection=\"selected_cleanser\"\r\n    dataKey=\"cleanser_id\"\r\n    :paginator=\"true\"\r\n    :rows=\"10\"\r\n    filterDisplay=\"menu\"\r\n    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n    :rowsPerPageOptions=\"[10, 25, 50]\"\r\n    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n    responsiveLayout=\"scroll\"\r\n  >\r\n    <template #header>\r\n      <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n        <h5 class=\"p-m-0\">Cleansers</h5>\r\n        <span class=\"p-input-icon-left\">\r\n          <i class=\"pi pi-search\" />\r\n          <InputText placeholder=\"Keyword Search\" />\r\n        </span>\r\n      </div>\r\n    </template>\r\n    <template #empty>\r\n      <span v-if=\"cleansers_loading\">\r\n        Loading Cleansers. Please wait.\r\n        <ProgressBar mode=\"indeterminate\" />\r\n      </span>\r\n      <span v-else> There are no cleansers. </span>\r\n    </template>\r\n    <template #loading>\r\n      Loading Cleansers. Please wait. <ProgressBar mode=\"indeterminate\" />\r\n    </template>\r\n    <Column selectionMode=\"single\" style=\"min-width: 3rem\"></Column>\r\n    <Column field=\"cleanser_id\" header=\"ID\" sortable style=\"min-width: auto\">\r\n    </Column>\r\n    <Column field=\"name\" header=\"Name\" sortable style=\"min-width: auto\">\r\n    </Column>\r\n    <Column\r\n      field=\"description\"\r\n      header=\"Description\"\r\n      sortable\r\n      style=\"min-width: auto\"\r\n    >\r\n    </Column>\r\n    <Column\r\n      field=\"datasets\"\r\n      header=\"Supporting Datasets\"\r\n      style=\"min-width: auto\"\r\n    >\r\n      <template #body=\"slotProps\">\r\n        <Dropdown :options=\"slotProps.data.datasets\" placeholder=\"Datasets\" />\r\n      </template>\r\n    </Column>\r\n\r\n    <Column header=\"Supporting Headers\" style=\"min-width: auto\">\r\n      <template #body=\"slotProps\">\r\n        <Dropdown :options=\"slotProps.data.header_list\" placeholder=\"Headers\" />\r\n      </template>\r\n    </Column>\r\n    <Column\r\n      field=\"cleanser_operation_types\"\r\n      header=\"Supporting Cleansing Operations\"\r\n      style=\"min-width: auto\"\r\n    >\r\n      <template #body=\"slotProps\">\r\n        <Dropdown\r\n          :options=\"slotProps.data.cleanser_operation_types\"\r\n          placeholder=\"Operations\"\r\n        />\r\n      </template>\r\n    </Column>\r\n    <Column header=\"Ad hoc Operations\" style=\"min-width: auto\">\r\n      <template #body>\r\n        <div class=\"btn-align-td\">\r\n          <button\r\n            v-on:click=\"deleteCleanser(this.selected_cleanser.cleanser_id)\"\r\n            class=\"btn btn-secondary\"\r\n            v-tooltip=\"'Select Cleanser first'\"\r\n          >\r\n            <b-icon-trash-fill />\r\n          </button>\r\n        </div>\r\n        <ProgressBar mode=\"indeterminate\" v-if=\"cleanser_operating\" />\r\n      </template>\r\n    </Column>\r\n  </DataTable>\r\n</template>\r\n \r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      cleansers: this.listCleansers(),\r\n      selected_cleanser: \"\",\r\n      cleansers_loading: true,\r\n      cleanser_operating: false,\r\n    };\r\n  },\r\n  methods: {\r\n    normalizeCleanser() {\r\n      for (let index = 0; index < this.cleansers.length; index++) {\r\n        for (var key in this.cleansers[index]) {\r\n          if (key === \"header_list\") {\r\n            this.cleansers[index][key] = this.cleansers[index][key].split(\",\");\r\n          }\r\n          if (key === \"datasets\") {\r\n            this.cleansers[index][key] = this.cleansers[index][key].split(\",\");\r\n          }\r\n          if (key === \"cleanser_operation_types\") {\r\n            this.cleansers[index][key] = this.cleansers[index][key].split(\",\");\r\n          }\r\n        }\r\n      }\r\n    },\r\n    deleteCleanser(cleanser_id) {\r\n      if (cleanser_id === undefined) {\r\n        this.$toast.add({\r\n          severity: \"warn\",\r\n          summary: \"No Cleanser selected\",\r\n          detail: \"Please select Cleanser first\",\r\n          life: 3000,\r\n        });\r\n      } else {\r\n        this.cleanser_operating = true;\r\n      }\r\n      this.$axios\r\n        .delete(\"/delete_cleanser/\" + cleanser_id)\r\n        .then(() => {\r\n          this.listCleansers();\r\n          if (this.cleanser_operating == true) {\r\n            this.$toast.add({\r\n              severity: \"success\",\r\n              summary: \"Cleanser successfully deleted\",\r\n              detail: \"Cleanser was successfully deleted\",\r\n              life: 3000,\r\n            });\r\n          }\r\n          this.cleanser_operating = false;\r\n          this.selected_cleanser = \"\";\r\n        })\r\n        .catch(() => {\r\n          this.cleanser_operating = false;\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Cleanser Deletion Unsuccessful\",\r\n            detail: \"The selected Cleanser could not be deleted\",\r\n            life: 3000,\r\n          });\r\n          this.selected_cleanser = \"\";\r\n        });\r\n    },\r\n    strToList(strings) {\r\n      const list_string = strings.split(\",\");\r\n      return list_string;\r\n    },\r\n    listCleansers() {\r\n      this.$axios.get(\"/get_cleansers\").then((res) => {\r\n        this.cleansers = res.data.data;\r\n        this.normalizeCleanser();\r\n        if (this.cleansers.length === 0) {\r\n          this.cleansers_loading = false;\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\nbutton {\r\n  color: white;\r\n  background: #0c8cd3;\r\n  border: 0px solid blue;\r\n  border-radius: 2px;\r\n}\r\n</style>"],"sourceRoot":""}]}